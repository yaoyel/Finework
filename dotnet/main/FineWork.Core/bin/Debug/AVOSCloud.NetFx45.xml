<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AVOSCloud.NetFx45</name>
    </assembly>
    <members>
        <member name="T:AVOSCloud.AVACL">
            <summary>
            ACL(Access Control List)是最灵活和简单的应用数据安全管理方法。
            通俗的解释就是为每一个数据创建一个访问的白名单列表，只有在名单上的用户(AVUser)或者具有某种角色(AVRole)的用户才能被允许访问。为了更好地保证用户数据安全性，AVOS Cloud表中每一张都有一个ACL列。
            当然，AVOS Cloud还提供了进一步的读写权限控制。
            一个 User 必须拥有读权限（或者属于一个拥有读权限的 Role）才可以获取一个对象的数据，同时，一个 User 需要写权限（或者属于一个拥有写权限的 Role）才可以更改或者删除一个对象。 
            </summary>
        </member>
        <member name="M:AVOSCloud.AVACL.#ctor">
            <summary>
            构造一个默认的权限
            </summary>
        </member>
        <member name="M:AVOSCloud.AVACL.#ctor(AVOSCloud.AVUser)">
            <summary>
            根据 AVUser 构建一个 ACL
            </summary>
            <param name="owner">The only user that can read or write objects governed by this ACL.</param>
        </member>
        <member name="M:AVOSCloud.AVACL.GetReadAccess(System.String)">
            <summary>
            根据用户 Id 获取此用户是否具备读取的权限
            </summary>
            <param name="userId">用户 Id</param>
            <returns>返回为真即表示该用户拥有读取的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetReadAccess(AVOSCloud.AVUser)">
            <summary>
            根据用户对象获取此用户是否具备读取的权限
            </summary>
            <param name="user">AVUser</param>
            <returns>返回为真即表示该用户拥有读取的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetRoleReadAccess(System.String)">
            <summary>
            根据角色名字获取读取权限 
            </summary>
            <param name="roleName">角色名字</param>
            <returns>返回为真即表示该角色拥有读取的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetRoleReadAccess(AVOSCloud.AVRole)">
            <summary>
            根据角色获取读取权限
            </summary>
            <param name="role">角色对象</param>
            <returns>返回为真即表示该角色拥有读取的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetRoleWriteAccess(System.String)">
            <summary>
            根据角色名获取写入权限
            </summary>
            <param name="roleName">角色名</param>
            <returns>返回为真即表示该角色拥有写入的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetRoleWriteAccess(AVOSCloud.AVRole)">
            <summary>
            根据角色获取写入权限
            </summary>
            <param name="role">角色对象</param>
            <returns>返回为真即表示该角色拥有写入的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetWriteAccess(System.String)">
            <summary>
            根据用户 Id 获取写入权限
            </summary>
            <param name="role">用户 Id</param>
            <returns>返回为真即表示该用户拥有写入的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.GetWriteAccess(AVOSCloud.AVUser)">
            <summary>
            根据用户获取写入权限
            </summary>
            <param name="role">用户对象</param>
            <returns>返回为真即表示该用户拥有写入的权限</returns>
        </member>
        <member name="M:AVOSCloud.AVACL.SetReadAccess(System.String,System.Boolean)">
            <summary>
            为用户设置读取权限
            </summary>
            <param name="userId">用户 Id</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetReadAccess(AVOSCloud.AVUser,System.Boolean)">
            <summary>
            为用户设置读取权限
            </summary>
            <param name="user">用户对象</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetRoleReadAccess(System.String,System.Boolean)">
            <summary>
            为角色设置读取权限
            </summary>
            <param name="roleName">角色名称</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetRoleReadAccess(AVOSCloud.AVRole,System.Boolean)">
            <summary>
            为角色设置读取权限
            </summary>
            <param name="role">角色</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetRoleWriteAccess(System.String,System.Boolean)">
            <summary>
            为角色设置写入权限
            </summary>
            <param name="roleName">角色名称</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetRoleWriteAccess(AVOSCloud.AVRole,System.Boolean)">
            <summary>
            为角色设置写入权限
            </summary>
            <param name="role">角色对象</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetWriteAccess(System.String,System.Boolean)">
            <summary>
            为用户设置写入权限
            </summary>
            <param name="userId">用户 Id</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="M:AVOSCloud.AVACL.SetWriteAccess(AVOSCloud.AVUser,System.Boolean)">
            <summary>
            为用户设置写入权限
            </summary>
            <param name="user">用户对象</param>
            <param name="allowed">权限值</param>
        </member>
        <member name="P:AVOSCloud.AVACL.PublicReadAccess">
            <summary>
            读权限
            </summary>
        </member>
        <member name="P:AVOSCloud.AVACL.PublicWriteAccess">
            <summary>
            写权限
            </summary>
        </member>
        <member name="T:AVOSCloud.AVACL.AccessKind">
            <summary>
            访问类别
            </summary>
        </member>
        <member name="T:AVOSCloud.AVClassNameAttribute">
            <summary>
            定义AVObject子类的名字。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVClassNameAttribute.#ctor(System.String)">
            <summary>
            Constructs a new AVClassName attribute.
            </summary>
            <param name="className">The class name to associate with the AVObject subclass.</param>
        </member>
        <member name="P:AVOSCloud.AVClassNameAttribute.ClassName">
            <summary>
            Gets the class name to associate with the AVObject subclass.
            </summary>
        </member>
        <member name="T:AVOSCloud.AVClient">
            <summary>
            AVClient包含了许多静态方法。
            注：在使用任何方法之前必须调用初始化方法->Initialize
            </summary>
        </member>
        <member name="F:AVOSCloud.AVClient.interfaceLookupCache">
            <summary>
            Holds a dictionary that maps a cache of interface types for related concrete types.
            The lookup is slow the first time for each type because it has to enumerate all interface
            on the object type, but made fast by the cache.
            The map is:
               (object type, generic interface type) =&gt; constructed generic type
            </summary>
        </member>
        <member name="M:AVOSCloud.AVClient.As``1(System.Object)">
            <summary>
            Performs a ConvertTo, but returns null if the object can't be
            converted to that type.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVClient.ConvertTo``1(System.Object)">
            <summary>
            Converts a value to the requested type -- coercing primitives to
            the desired type, wrapping lists and dictionaries appropriately,
            or else passing the object along to the caller unchanged.
            This should be used on any containers that might be coming from a
            user to normalize the collection types.  Collection types coming from
            JSON deserialization can be safely assumed to be lists or dictionaries of
            objects.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVClient.DeepTraversal(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Flattens dictionaries and lists into a single enumerable of all contained objects
            that can then be queried over.
            </summary>
            <param name="root">The root of the traversal</param>
            <param name="traverseAVObjects">Whether to traverse into AVObjects' children</param>
            <param name="yieldRoot">Whether to include the root in the result</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVClient.Initialize(System.String,System.String)">
            <summary>
            初始化 AVClient，所有 AVOS Cloud 的请求都是通过这个类去实现，所以在使用 sdk 之前，必须显示地调用Initialize方法。
            </summary>
            <param name="applicationId">Application ID 可以从 AVOS Cloud 控制台中->设置 找到。</param>
            <param name="appKey">App Key 可以从 AVOS Cloud 控制台中->设置 找到。</param>
        </member>
        <member name="M:AVOSCloud.AVClient.Initialize(System.String,System.String,AVOSCloud.AVRegion)">
            <summary>
            初始化 AVClient，所有 AVOS Cloud 的请求都是通过这个类去实现，所以在使用 sdk 之前，必须显示地调用Initialize方法。
            </summary>
            <param name="applicationId">Application ID 可以从 AVOS Cloud 控制台中->设置 找到。</param>
            <param name="appKey">App Key 可以从 AVOS Cloud 控制台中->设置 找到。</param>
            <param name="region">目前仅支持CN和US，默认值是CN。</param>
        </member>
        <member name="M:AVOSCloud.AVClient.Initialize(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="applicationId">Application ID</param>
            <param name="appKey">App Key</param>
            <param name="region">所使用的 AVOS Cloud 的节点，默认是CN，可选项目前仅支持：CN，US</param>
        </member>
        <member name="M:AVOSCloud.AVClient.RequestAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Convenience alias for RequestAsync that takes a string instead of a Uri.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVClient.RequestAsync(System.String,System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            The main mechanism for making requests to AVOSCloud.  Attaches headers related to
            the SDK, session token, etc., then JSON-parses the result of the request and throws
            a AVException if necessary.
            </summary>
            <param name="method">The HTTP method to use.</param>
            <param name="relativeUri">A relative URI for the API.</param>
            <param name="cancellationToken">The session token for the request.</param>
            <param name="data">A JSON-style data object that will be stringified
            for the request body.</param>
            <param name="sessionToken">The cancellation token for the request.</param>
            <returns>A tuple indicating the HTTP status code and the JSON data
            returned by the request.</returns>
        </member>
        <member name="T:AVOSCloud.AVCloud">
            <summary>
            访问云代码以及一些通用方法。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVCloud.CallFunctionAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            调用云代码
            </summary>
            <returns>返回一个Task的泛型。</returns>
            <param name="name">函数名</param>
            <param name="parameters">传入的参数字典</param>
            <typeparam name="T">云代码实际的返回值的类型</typeparam>
        </member>
        <member name="M:AVOSCloud.AVCloud.CallFunctionAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            调用云代码
            </summary>
            <returns>返回一个Task的泛型。</returns>
            <param name="name">函数名</param>
            <param name="parameters">传入的参数字典</param>
            <param name="cancellationToken">Cancellation token.</param>
            <typeparam name="T">云代码实际的返回值的类型</typeparam>
        </member>
        <member name="M:AVOSCloud.AVCloud.CallFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            调用云代码
            </summary>
            <returns>返回一个 Task String 的类型</returns>
            <param name="name">函数名</param>
            <param name="parameters">传入的参数字典</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.CallFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            调用云代码
            </summary>
            <returns>返回一个 Task String 的类型</returns>
            <param name="name">函数名</param>
            <param name="parameters">传入的参数字典</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.RequestSMSCode(System.String,System.String,System.String,System.Int32)">
            <summary>
            请求短信认证。
            </summary>
            <param name="mobilePhoneNumber">手机号。</param>
            <param name="name">应用名称。</param>
            <param name="op">进行的操作名称。</param>
            <param name="ttl">验证码失效时间。</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVCloud.RequestSMSCode(System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            请求发送验证码。
            </summary>
            <returns>是否发送成功。</returns>
            <param name="mobilePhoneNumber">手机号。</param>
            <param name="name">应用名称。</param>
            <param name="op">进行的操作名称。</param>
            <param name="ttl">验证码失效时间。</param>
            <param name="cancellationToken">Cancellation token。</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.RequestSMSCode(System.String)">
            <summary>
            请求发送验证码。
            </summary>
            <returns>是否发送成功。</returns>
            <param name="mobilePhoneNumber">手机号。</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.RequestSMSCode(System.String,System.Threading.CancellationToken)">
            <summary>
            请求发送验证码。
            </summary>
            <returns>是否发送成功。</returns>
            <param name="mobilePhoneNumber">手机号。</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.RequestVoiceCode(System.String)">
            <summary>
            发送语音验证码
            </summary>
            <returns>操作结果</returns>
            <param name="mobilePhoneNumber">手机号</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.VerifySmsCode(System.String,System.String)">
            <summary>
            验证是否是有效短信验证码。
            </summary>
            <returns>是否验证通过。</returns>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="code">验证码。</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.VerifySmsCode(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            验证是否是有效短信验证码。
            </summary>
            <returns>是否验证通过。</returns>
            <param name="code">验证码。</param>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="cancellationToken">Cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVCloud.GetServerDateTime">
            <summary>
            获取 LeanCloud 服务器的时间
            <remarks>
            如果获取失败，将返回 DateTime.MinValue
            </remarks>
            </summary>
            <returns>服务器的时间</returns>
        </member>
        <member name="T:AVOSCloud.AVException">
            <summary>
            AVOS Cloud 自定义的异常，包括本地以及服务端的异常。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVException.Code">
            <summary>
            错误代码。
            </summary>
        </member>
        <member name="T:AVOSCloud.AVException.ErrorCode">
            <summary>
            错误代码的枚举值。
            </summary>
        </member>
        <member name="T:AVOSCloud.AVExtensions">
            <summary>
            一些SDK的拓展方法。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fetches all of the objects in the enumeration.  Equivalent to
            calling <see cref="M:AVOSCloud.AVObject.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0})" />.
            </summary>
            <param name="objects">The objects to save.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Fetches all of the objects in the enumeration.  Equivalent to
            calling
            <see cref="M:AVOSCloud.AVObject.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)" />.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fetches all of the objects in the enumeration that don't already have
            data.  Equivalent to calling
            <see cref="M:AVOSCloud.AVObject.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0})" />.
            </summary>
            <param name="objects">The objects to fetch.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Fetches all of the objects in the enumeration that don't already have
            data.  Equivalent to calling
            <see cref="M:AVOSCloud.AVObject.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)" />.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAsync``1(``0)">
            <summary>
            Fetches this object with the data from the server.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Fetches this object with the data from the server.
            </summary>
            <param name="obj">The AVObject to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchIfNeededAsync``1(``0)">
            <summary>
            If this AVObject has not been fetched (i.e. <see cref="P:AVOSCloud.AVObject.IsDataAvailable" /> returns
            false), fetches this object with the data from the server.
            </summary>
            <param name="obj">The AVObject to fetch.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.FetchIfNeededAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            If this AVObject has not been fetched (i.e. <see cref="P:AVOSCloud.AVObject.IsDataAvailable" /> returns
            false), fetches this object with the data from the server.
            </summary>
            <param name="obj">The AVObject to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.Or``1(AVOSCloud.AVQuery{``0},AVOSCloud.AVQuery{``0}[])">
            <summary>
            Constructs a query that is the or of the given queries.
            </summary>
            <typeparam name="T">The type of AVObject being queried.</typeparam>
            <param name="source">An initial query to 'or' with additional queries.</param>
            <param name="queries">The list of AVInstallations to 'or' together.</param>
            <returns>A query that is the or of the given queries.</returns>
        </member>
        <member name="M:AVOSCloud.AVExtensions.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Saves all of the AVObjects in the enumeration.  Equivalent to
            calling <see cref="M:AVOSCloud.AVObject.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0})" />.
            </summary>
            <param name="objects">The objects to save.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Saves all of the AVObjects in the enumeration.  Equivalent to
            calling
            <see cref="M:AVOSCloud.AVObject.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)" />.
            </summary>
            <param name="objects">The objects to save.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVExtensions.InsertAttrPrefix(System.String)">
            <summary>
            为聊天的自定义属性查询自动添加 "attr." 的前缀
            </summary>
            <param name="key">属性 key 值，例如 type </param>
            <returns>添加前缀的值，例如，attr.type </returns>
        </member>
        <member name="T:AVOSCloud.AVFieldNameAttribute">
            <summary>
            AVObject 子类的 服务端字段的属性声明。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVFieldNameAttribute.#ctor(System.String)">
            <summary>
            Constructs a new AVFieldName attribute.
            </summary>
            <param name="fieldName">The name of the field on the AVObject that the
            property represents.</param>
        </member>
        <member name="P:AVOSCloud.AVFieldNameAttribute.FieldName">
            <summary>
            Gets the name of the field represented by this property.
            </summary>
        </member>
        <member name="T:AVOSCloud.AVFile">
            <summary>
            AVFile 表示AVOS Cloud 对文件的实现。它可以帮助上传，下载文本，音频，视频等文件。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVFile.#ctor(System.String,System.String)">
            <summary>
            根据文件名和 Url 创建文件
            </summary>
            <param name="name">文件名</param>
            <param name="url">文件的 Url</param>
        </member>
        <member name="M:AVOSCloud.AVFile.#ctor(System.String,System.Byte[])">
            <summary>
            根据 byte 数组以及文件名创建文件
            </summary>
            <param name="name">文件名</param>
            <param name="data">文件的 byte[] 数据</param>
        </member>
        <member name="M:AVOSCloud.AVFile.#ctor(System.String,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            根据文件名，数据 byte[] 数组以及元数据创建文件
            </summary>
            <param name="name">文件名</param>
            <param name="data">文件的 byte[] 数据</param>
            <param name="metaData">元数据</param>
        </member>
        <member name="M:AVOSCloud.AVFile.#ctor(System.String,System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            根据文件名，数据流以及元数据创建文件
            </summary>
            <param name="name">文件名</param>
            <param name="data">文件的数据流</param>
            <param name="metaData">元数据</param>
        </member>
        <member name="M:AVOSCloud.AVFile.#ctor(System.String,System.IO.Stream)">
            <summary>
            根据文件名，数据流以及元数据创建文件
            </summary>
            <param name="name">文件名</param>
            <param name="data">文件的数据流</param>
        </member>
        <member name="M:AVOSCloud.AVFile.SaveAsync">
            <summary>
            保存数据到服务端
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.SaveAsync(System.Threading.CancellationToken)">
            <summary>
            保存数据到服务端
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.SaveAsync(System.IProgress{AVOSCloud.AVUploadProgressEventArgs})">
            <summary>
            保存数据到服务端。
            </summary>
            <param name="progress">存储进度</param>
        </member>
        <member name="M:AVOSCloud.AVFile.SaveAsync(System.IProgress{AVOSCloud.AVUploadProgressEventArgs},System.Threading.CancellationToken)">
            <summary>
            保存数据到服务端
            </summary>
            <param name="progress">存储进度</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.DeleteAsync">
            <summary>
            删除文件
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.DownloadAsync">
            <summary>
            下载文件
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.GetFileWithObjectIdAsync(System.String)">
            <summary>
            根据 objectId 创建文件
            </summary>
            <param name="objectId">文件的 objectId</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="M:AVOSCloud.AVFile.CreateFileWithLocalPath(System.String,System.String)">
            <summary>
            从本地文件存储系统中创建AVFile
            </summary>
            <param name="name">文件名</param>
            <param name="path">e.g:/SD/Camera/AVOSCloud.jpg</param>
            <returns>AVFile</returns>
        </member>
        <member name="M:AVOSCloud.AVFile.GetFileWithObjectIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            根据 ObjectId 获取文件
            </summary>
            <remarks>获取之后并没有实际执行下载，只是加载了文件的元信息以及物理地址（Url）
            </remarks>
        </member>
        <member name="M:AVOSCloud.AVFile.ToBase64URLSafe(System.String)">
            <summary>
            string扩展方法，生成base64UrlSafe
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVFile.Encode(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="P:AVOSCloud.AVFile.IsDirty">
            <summary>
            判断数据是否有修改，有修改就需要发送到服务端进行保存。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVFile.Name">
            <summary>
            文件名
            the user.  After save is called, that name gets prefixed with a unique identifier.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVFile.Url">
            <summary>
            文件存储的Url地址。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVFile.MetaData">
            <summary>
            文件的元数据。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVFile.ObjectId">
            <summary>
            文件在 LeanCloud 的唯一Id 标识
            </summary>
        </member>
        <member name="P:AVOSCloud.AVFile.DataByte">
            <summary>
            文件的二进制数据
            </summary>
        </member>
        <member name="T:AVOSCloud.AVGeoDistance">
            <summary>
            代表两个地理位置之间的距离。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVGeoDistance.#ctor(System.Double)">
            <summary>
            Creates a AVGeoDistance.
            </summary>
            <param name="radians">The distance in radians.</param>
        </member>
        <member name="M:AVOSCloud.AVGeoDistance.FromKilometers(System.Double)">
            <summary>
            Gets a AVGeoDistance from a number of kilometers.
            </summary>
            <param name="kilometers">The number of kilometers.</param>
            <returns>A AVGeoDistance for the given number of kilometers.</returns>
        </member>
        <member name="M:AVOSCloud.AVGeoDistance.FromMiles(System.Double)">
            <summary>
            Gets a AVGeoDistance from a number of miles.
            </summary>
            <param name="miles">The number of miles.</param>
            <returns>A AVGeoDistance for the given number of miles.</returns>
        </member>
        <member name="M:AVOSCloud.AVGeoDistance.FromRadians(System.Double)">
            <summary>
            Gets a AVGeoDistance from a number of radians.
            </summary>
            <param name="radians">The number of radians.</param>
            <returns>A AVGeoDistance for the given number of radians.</returns>
        </member>
        <member name="P:AVOSCloud.AVGeoDistance.Kilometers">
            <summary>
            Gets the distance in kilometers.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVGeoDistance.Miles">
            <summary>
            Gets the distance in miles.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVGeoDistance.Radians">
            <summary>
            Gets the distance in radians.
            </summary>
        </member>
        <member name="T:AVOSCloud.AVGeoPoint">
            <summary>
            表示一个地理位置。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVGeoPoint.#ctor(System.Double,System.Double)">
            <summary>
            利用纬度和经度构造一个地理位置
            </summary>
            <param name="latitude">纬度</param>
            <param name="longitude">经度</param>
        </member>
        <member name="M:AVOSCloud.AVGeoPoint.DistanceTo(AVOSCloud.AVGeoPoint)">
            <summary>
            计算2个地理位置之间的距离
            distance between the two points.
            </summary>
            <param name="point">另一个地理位置</param>
            <returns>距离</returns>
        </member>
        <member name="P:AVOSCloud.AVGeoPoint.Latitude">
            <summary>
            纬度，取值范围是 [-90, 90].
            </summary>
        </member>
        <member name="P:AVOSCloud.AVGeoPoint.Longitude">
            <summary>
            经度，取值范围是 [-180, 180].
            </summary>
        </member>
        <member name="T:AVOSCloud.AVObject">
            <summary>
            表示一个抽象的 AVOS Cloud 客户端对象。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.#ctor">
            <summary>
            Constructor for use in AVObject subclasses. Subclasses must specify a AVClassName attribute.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.#ctor(System.String)">
            <summary>
            根据 className 创建一个 AVObject
            </summary>
            <remarks>
            className 必须符合 Alphanumerical 规则
            推荐的名字如： CamelCaseLikeThis.
            </remarks>
            <param name="className">类名</param>
        </member>
        <member name="M:AVOSCloud.AVObject.Add(System.String,System.Object)">
            <summary>
            为 AVObject 添加键值对的属性
            </summary>
            <param name="key">属性名，可以简单的理解为 Table 中的 Column 的名字</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:AVOSCloud.AVObject.AddRangeToList``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加目标集合到当前 AVObject 的 key 属性
            </summary>
            <param name="key">属性名</param>
            <param name="values">目标集合</param>
        </member>
        <member name="M:AVOSCloud.AVObject.AddRangeUniqueToList``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加目标集合到当前 AVObject 的 key 属性，目标集合中有元素与已存在的元素有重复的情况，会产生覆盖操作
            </summary>
            <param name="key">属性名</param>
            <param name="values">目标集合</param>
        </member>
        <member name="M:AVOSCloud.AVObject.AddToList(System.String,System.Object)">
            <summary>
            把 value 当做一个元素 插入到 key 的属性里面，前提是 key 对应的属性如果不为空，就必须已经是一个存在的集合类型
            </summary>
            <param name="key">属性名</param>
            <param name="value">目标元素</param>
        </member>
        <member name="M:AVOSCloud.AVObject.AddUniqueToList(System.String,System.Object)">
            <summary>
            把 value 当做一个元素 插入到 key 的属性里面，前提是 key 对应的属性如果不为空，就必须已经是一个存在的集合类型
            </summary>
            <remarks>
            此操作之后 集合中 value 的值有且只有一个，区别于AddToList
            </remarks>
            <param name="key">属性名</param>
            <param name="value">目标元素</param>
        </member>
        <member name="M:AVOSCloud.AVObject.ApplyOperations(System.Collections.Generic.IDictionary{System.String,AVOSCloud.Internal.IAVFieldOperation},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates the estimated values in the map based on the given set of AVFieldOperations.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.CanBeSerializedAsValue(System.Object)">
            <summary>
            Returns true if the given object can be serialized for saving as a value
            that is pointed to by a AVObject.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.CheckForChangesToMutableContainer(System.String,System.Object)">
            <summary>
            Inspects to see if a given mutable container owned by this object has
            been mutated, and treats any mutation as a new "set" operation.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.CheckForChangesToMutableContainers">
            <summary>
            Inspects to see if any mutable container owned by this object has been mutated, and
            treats any mutation as a new 'Set' operation.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.CheckpointMutableContainer(System.Object)">
            <summary>
            Updates the JSON cache value for the given object.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.CollectDirtyChildren(System.Object,System.Collections.Generic.IList{AVOSCloud.AVObject})">
            <summary>
            Helper version of CollectDirtyChildren so that callers don't have to add the internally
            used parameters.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AVOSCloud.AVObject.ContainsKey(System.String)" -->
        <member name="M:AVOSCloud.AVObject.Create(System.String)">
            <summary>
            根据 className 创建一个全新的对象
            </summary>
            <param name="className">class name</param>
            <returns>AVObject</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.Create``1">
            <summary>
            Creates a new AVObject based upon a given subclass type.
            </summary>
            <returns>A new AVObject for the given class name.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.CreateWithoutData(System.String,System.String)">
            <summary>
            Creates a reference to an existing AVObject for use in creating associations between
            AVObjects.  Calling <see cref="P:AVOSCloud.AVObject.IsDataAvailable" /> on this object will return
            <c>false</c> until <see cref="M:AVOSCloud.AVExtensions.FetchIfNeededAsync``1(``0)" /> has been called.
            No network request will be made.
            </summary>
            <param name="className">The object's class.</param>
            <param name="objectId">The object id for the referenced object.</param>
            <returns>A AVObject without data.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.CreateWithoutData``1(System.String)">
            <summary>
            Creates a reference to an existing AVObject for use in creating associations between
            AVObjects.  Calling <see cref="P:AVOSCloud.AVObject.IsDataAvailable" /> on this object will return
            <c>false</c> until <see cref="M:AVOSCloud.AVExtensions.FetchIfNeededAsync``1(``0)" /> has been called.
            No network request will be made.
            </summary>
            <param name="objectId">The object id for the referenced object.</param>
            <returns>A AVObject without data.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.DeleteAsync">
            <summary>
            从服务器上删除该对象
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            从服务器上删除该对象
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.EnqueueForAll``1(System.Collections.Generic.IEnumerable{AVOSCloud.AVObject},System.Func{System.Threading.Tasks.Task,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Adds a task to the queue for all of the given objects.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fetches all of the objects in the provided list.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <returns>The list passed in for convenience.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Fetches all of the objects in the provided list.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list passed in for convenience.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Fetches all of the objects that don't have data in the provided list.
            </summary>
            <returns>The list passed in for convenience.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAllIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Fetches all of the objects that don't have data in the provided list.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list passed in for convenience.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAllInternalAsync``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Threading.Tasks.Task,System.Threading.CancellationToken)">
            <summary>
            Fetches all of the objects in the list.
            </summary>
            <param name="objects">The objects to fetch.</param>
            <param name="force">If false, only objects without data will be fetched.</param>
            <param name="toAwait">A task to await before starting.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The list passed in for convenience.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchAsyncInternal(System.Threading.CancellationToken)">
            <summary>
            Fetches this object with the data from the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.FetchIfNeededAsyncInternal(System.Threading.CancellationToken)">
            <summary>
            If this AVObject has not been fetched (i.e. <see cref="P:AVOSCloud.AVObject.IsDataAvailable" /> returns
            false), fetches this object with the data from the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.Get``1(System.String)">
            <summary>
            Gets a value for the key of a particular type.
            <typeparam name="T">The type to convert the value to. Supported types are
            AVObject and its descendents, AVOSCloud types such as AVRelation and AVGeopoint,
            primitive types,IList&lt;T&gt;, IDictionary&lt;string, T&gt;, and strings.</typeparam>
            <param name="key">The key of the element to get.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is
            retrieved and <paramref name="key" /> is not found.</exception>
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.GetFactory(System.String)">
            <summary>
            Gets the appropriate factory for the given class name.  If there is no factory for the class,
            a factory that produces a regular AVObject will be created.
            </summary>
            <param name="className">The class name for the AVObjects the factory will create.</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVObject.GetQuery(System.String)">
            <summary>
            Gets a <see cref="T:AVOSCloud.AVQuery`1" /> for the type of object specified by
            <paramref name="className" />
            </summary>
            <param name="className">The class name of the object.</param>
            <returns>A new <see cref="T:AVOSCloud.AVQuery`1" />.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.GetRelation``1(System.String)">
            <summary>
            Access or create a Relation value for a key.
            </summary>
            <typeparam name="T">The type of object to create a relation for.</typeparam>
            <param name="key">The key for the relation field.</param>
            <returns>A AVRelation for the key.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.HasSameId(AVOSCloud.AVObject)">
            <summary>
            A helper function for checking whether two AVObjects point to
            the same object in the cloud.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.Increment(System.String)">
            <summary>
            Atomically increments the given key by 1.
            </summary>
            <param name="key">The key to increment.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.Increment(System.String,System.Int64)">
            <summary>
            Atomically increments the given key by the given number.
            </summary>
            <param name="key">The key to increment.</param>
            <param name="amount">The amount to increment by.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.Increment(System.String,System.Double)">
            <summary>
            Atomically increments the given key by the given number.
            </summary>
            <param name="key">The key to increment.</param>
            <param name="amount">The amount to increment by.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.IsKeyDirty(System.String)">
            <summary>
            Indicates whether key is unsaved for this AVObject.
            </summary>
            <param name="key">The key to check for.</param>
            <returns><c>true</c> if the key has been altered and not saved yet, otherwise
            <c>false</c>.</returns>
        </member>
        <member name="M:AVOSCloud.AVObject.OnFieldsChanged(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Raises change notifications for all properties associated with the given
            field names.  If fieldNames is null, this will notify for all known field-linked
            properties (e.g. this happens when we recalculate all estimated data from scratch)
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.OnSettingValue(System.String@,System.Object@)">
            <summary>
            Override to run validations on key/value pairs.  Make sure to still
            call the base version.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.PerformOperation(System.String,AVOSCloud.Internal.IAVFieldOperation)">
            <summary>
            PerformOperation is like setting a value at an index, but instead of
            just taking a new value, it takes a AVFieldOperation that modifies the value.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.RebuildEstimatedData">
            <summary>
            Regenerates the estimatedData map from the serverData and operations.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.RegisterSubclass``1">
            <summary>
            Registers a custom subclass type with the AVOSCloud SDK, enabling strong-typing of those AVObjects whenever
            they appear. Subclasses must specify the AVClassName attribute, have a default constructor, and properties
            backed by AVObject fields should have AVFieldName attributes supplied.
            </summary>
            <typeparam name="T">The AVObject subclass type to register.</typeparam>
        </member>
        <member name="M:AVOSCloud.AVObject.Remove(System.String)">
            <summary>
            Removes a key from the object's data if it exists.
            </summary>
            <param name="key">The key to remove.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.RemoveAllFromList``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Atomically removes all instances of the objects in <paramref name="values" />
            from the list associated with the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The objects to remove.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.Revert">
            <summary>
            Clears any changes to this object made since the last call to <see cref="M:AVOSCloud.AVObject.SaveAsync" />.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Saves each object in the provided list.
            </summary>
            <param name="objects">The objects to save.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.SaveAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Saves each object in the provided list.
            </summary>
            <param name="objects">The objects to save.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.SaveAsync">
            <summary>
            Saves this object to the server.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.SaveAsync(System.Threading.CancellationToken)">
            <summary>
            Saves this object to the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVObject.SetDefaultValues">
            <summary>
            Allows subclasses to set values for non-pointer construction.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.SetObjectIdInternal(System.String)">
            <summary>
            Sets the objectId without marking dirty.
            </summary>
            <param name="objectId">The new objectId</param>
        </member>
        <member name="M:AVOSCloud.AVObject.SetProperty``1(``0,System.String)">
            <summary>
            Sets the value of a property based upon its associated AVFieldName attribute.
            </summary>
            <param name="value">The new value.</param>
            <param name="propertyName">The name of the property.</param>
            <typeparam name="T">The type for the property.</typeparam>
        </member>
        <member name="M:AVOSCloud.AVObject.GetProperty``1(System.String)">
            <summary>
            Gets the value of a property based upon its associated AVFieldName attribute.
            </summary>
            <returns>The value of the property.</returns>
            <param name="propertyName">The name of the property.</param>
            <typeparam name="T">The return type of the property.</typeparam>
        </member>
        <member name="M:AVOSCloud.AVObject.GetProperty``1(``0,System.String)">
            <summary>
            Gets the value of a property based upon its associated AVFieldName attribute.
            </summary>
            <returns>The value of the property.</returns>
            <param name="defaultValue">The value to return if the property is not present on the AVObject.</param>
            <param name="propertyName">The name of the property.</param>
            <typeparam name="T">The return type of the property.</typeparam>
        </member>
        <member name="M:AVOSCloud.AVObject.GetRelationProperty``1(System.String)">
            <summary>
            Gets a relation for a property based upon its associated AVFieldName attribute.
            </summary>
            <returns>The AVRelation for the property.</returns>
            <param name="propertyName">The name of the property.</param>
            <typeparam name="T">The AVObject subclass type of the AVRelation.</typeparam>
        </member>
        <member name="M:AVOSCloud.AVObject.OnPropertyChanged(System.String)">
            <summary>
            Raises change notifications for a property.  Passing null or the empty string
            notifies the binding framework that all properties/indexes have changed.
            Passing "Item[]" tells the binding framework that all indexed values
            have changed (but not all properties)
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.StartSave">
            <summary>
            Pushes new operations onto the queue and returns the current set of operations.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVObject.TryGetValue``1(System.String,``0@)">
            <summary>
            Populates result with the value for the key, if possible.
            </summary>
            <typeparam name="T">The desired type for the value.</typeparam>
            <param name="key">The key to retrieve a value for.</param>
            <param name="result">The value for the given key, converted to the
            requested type, or null if unsuccessful.</param>
            <returns>true if the lookup and conversion succeeded, otherwise
            false.</returns>
        </member>
        <member name="P:AVOSCloud.AVObject.ACL">
            <summary>
            AVObject 的ACL值。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.ClassName">
            <summary>
            AVObject在服务端存储的名字。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.CreatedAt">
            <summary>
            AVObject创建的时间，一旦创建不可修改。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.IsDataAvailable">
            <summary>
            是否所有属性都从服务端加载到本地。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.IsDirty">
            <summary>
            对象是否有更新。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.IsNew">
            <summary>
            当前对象是否为新建对象。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.Item(System.String)">
            <summary>
            根据key返回AVObject的属性字典里面对应的value值。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:AVOSCloud.AVObject.Keys">
            <summary>
            返回普通属性的所有的key，不包含ACL等系统特定的字段值。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.ObjectId">
            <summary>
            Gets or sets the object id. An object id is assigned as soon as an object is
            saved to the server. The combination of a <see cref="P:AVOSCloud.AVObject.ClassName" /> and an
            <see cref="P:AVOSCloud.AVObject.ObjectId" /> uniquely identifies an object in your application.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.PropertyMappings">
            <summary>
            Gets the set of fieldName-&gt;propertyName mappings for the current class.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVObject.UpdatedAt">
            <summary>
            对象最后被更新的时间。
            </summary>
        </member>
        <member name="E:AVOSCloud.AVObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:AVOSCloud.AVQuery`1">
            <summary>
            实现从服务端查询数据的类。
            </summary>
            <typeparam name="T">AVObject</typeparam>
        </member>
        <member name="T:AVOSCloud.AVQueryBase`2">
            <summary>
            查询类型的基类
            </summary>
            <typeparam name="S">查询类本身</typeparam>
            <typeparam name="T">被查询的类</typeparam>
        </member>
        <member name="T:AVOSCloud.AVQueryTuple`2">
            <summary>
            查询 Tuple
            </summary>
            <typeparam name="S">Query 类型</typeparam>
            <typeparam name="T">IAVObjectBase</typeparam>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.#ctor(AVOSCloud.AVQueryBase{`0,`1},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Private constructor for composition of queries.  A source query is required,
            but the remaining values can be null if they won't be changed in this
            composition.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereEqualTo(System.String,System.Object)">
            <summary>
            查询的键值（数据表中的列名）中等于匹配查询值的集合
            类似于 SQL 语句里面的 = 查询
            </summary>
            <param name="key">The key to check.</param>
            <param name="value">The value that the AVObject must contain.</param>
            <returns>A new query with the additional constraint.</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereNotEqualTo(System.String,System.Object)">
            <summary>
            查询某列所有不等于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">用以匹配的值</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereStartsWith(System.String,System.String)">
            <summary>
            查询某一列以某个特殊字符串作为开始字符串的字符串对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="suffix">用以查找的字符串</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereEndsWith(System.String,System.String)">
            <summary>
            查询某一列以某个特殊字符串作为结束字符串的字符串对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="suffix">用以查找的字符串</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereContains(System.String,System.String)">
            <summary>
            包含查询
            </summary>
            <param name="key">匹配列名</param>
            <param name="substring">被包含的目标字符串</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereContainsAll``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            查询某一列包含全部指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="values">被包含的指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereContainedIn``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            增加针对集合内部包含的查询条件，返回一个新的AVQuery<see cref="!:&lt;T&gt;"/>。
            </summary>
            <typeparam name="TIn">TIn</typeparam>
            <param name="key">查询的键值（数据表中的列名）</param>
            <param name="values">包含的IEnumerable，只有key中包含了values集合中的元素才会被查找出来。</param>
            <returns>
            一个包含了查询条件的新的AVQuery<see cref="!:&lt;T&gt;"/>.
            </returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereNotContainedIn``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            查询某一列不包含指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="values">不被包含的指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereGreaterThan(System.String,System.Object)">
            <summary>
            查询某一列大于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereGreaterThanOrEqualTo(System.String,System.Object)">
            <summary>
            查询某一列大于或者等于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereLessThan(System.String,System.Object)">
            <summary>
            查询某一列小于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereLessThanOrEqualTo(System.String,System.Object)">
            <summary>
            查询某一列小于或者等于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">指定值</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereExists(System.String)">
            <summary>
            查询某一列存在有效值的对象
            </summary>
            <param name="key">匹配列名</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereDoesNotExist(System.String)">
            <summary>
            查询某一列不存在有效值的对象
            </summary>
            <param name="key">匹配列名</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatches(System.String,System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            正则匹配查询
            </summary>
            <param name="key">匹配列名</param>
            <param name="regex">正则表达式，仅支持 RegexOptions.ECMAScript</param>
            <param name="modifiers">支持 PCRE 语法:
            <code>i</code> 大小写敏感
            <code>m</code> 跨行搜索</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatches(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            正则匹配查询
            </summary>
            <param name="key">匹配列名</param>
            <param name="regex">正则表达式，仅支持 RegexOptions.ECMAScript</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatches(System.String,System.String,System.String)">
            <summary>
            正则匹配查询
            </summary>
            <param name="key">匹配列名</param>
            <param name="pattern">被匹配的字符模板</param>
            <param name="modifiers">支持 PCRE 语法:
            <code>i</code> 大小写敏感
            <code>m</code> 跨行搜索</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatches(System.String,System.String)">
            <summary>
            正则匹配查询
            </summary>
            <param name="key">匹配列名</param>
            <param name="pattern">被匹配的字符模板</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatchesKeyInQuery``1(System.String,System.String,AVOSCloud.AVQuery{``0})">
            <summary>
            构建一个匹配另一个查询的查询
            </summary>
            <typeparam name="TOther">AVObject</typeparam>
            <param name="key">查询的列名</param>
            <param name="keyInQuery">另一个查询列名</param>
            <param name="query">另一个查询
            <typeparamref name="TOther">AVObject</typeparamref>
            </param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereMatchesQuery``1(System.String,AVOSCloud.AVQuery{``0})">
            <summary>
            构建某一列符合一个子查询的查询
            </summary>
            <param name="key">列名</param>
            <param name="query">子查询</param>
            <returns>返回一个新的查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereDoesNotMatchQuery``1(System.String,AVOSCloud.AVQuery{``0})">
            <summary>
            构建某一列不符合一个子查询的查询
            </summary>
            <param name="key">列名</param>
            <param name="query">子查询</param>
            <returns>返回一个新的查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.OrderBy(System.String)">
            <summary>
            排序
            </summary>
            <param name="key">排序的字段</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.OrderByDescending(System.String)">
            <summary>
            降序排序
            </summary>
            <param name="key">排序的字段</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.ThenBy(System.String)">
            <summary>
            次级字段排序
            </summary>
            <param name="key">排序字段</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.ThenByDescending(System.String)">
            <summary>
            次级字段的降序排序
            </summary>
            <param name="key">排序字段</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.WhereNear(System.String,AVOSCloud.AVGeoPoint)">
            <summary>
            查询某一列附近的对象
            </summary>
            <param name="key">列名，该列必须为一个 AVGeoPoint 对象</param>
            <param name="point">用以查询的 AVGeoPoint</param>
            <returns>一个新的查询</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AVOSCloud.AVQueryBase`2.WhereWithinDistance(System.String,AVOSCloud.AVGeoPoint,AVOSCloud.AVGeoDistance)" -->
        <member name="M:AVOSCloud.AVQueryBase`2.WhereWithinGeoBox(System.String,AVOSCloud.AVGeoPoint,AVOSCloud.AVGeoPoint)">
            <summary>
            查询矩形区域内的对象
            </summary>
            <param name="key">列名，该列必须为一个 AVGeoPoint 对象</param>
            <param name="southwest">最南端的 AVGeoPoint</param>
            <param name="northeast">最北端的 AVGeoPoint</param>
            <returns>一个新的查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.Skip(System.Int32)">
            <summary>
            跳过多少条查询记录
            </summary>
            <param name="count">跳过的数量</param>
            <returns>目标查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQueryBase`2.Limit(System.Int32)">
            <summary>
            限定查询数量
            </summary>
            <param name="count">限定的数量</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.#ctor(AVOSCloud.AVQuery{`0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Private constructor for composition of queries.  A source query is required,
            but the remaining values can be null if they won't be changed in this
            composition.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.#ctor">
            <summary>
            构造一个查询
            </summary>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.#ctor(System.String)">
            <summary>
            构造一个查询
            </summary>
            <param name="className">对象的名字</param>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.CountAsync">
            <summary>
            查询符合条件的对象数量
            </summary>
            <returns>符合条件的对象的数量</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            查询符合条件的对象数量
            </summary>
            <param name="cancellationToken">cancellation token.</param>
            <returns>符合条件的对象的数量</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FindAsync">
            <summary>
            执行查找
            </summary>
            <returns>返回查找到的对象列表</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FindAsync(System.Threading.CancellationToken)">
            <summary>
            执行查找
            </summary>
            <param name="cancellationToken">cancellation token.</param>
            <returns>返回查找到的对象列表</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FirstAsync">
            <summary>
            查询第一个符合条件的对象
            </summary>
            <returns>符合条件的对象</returns>
            <exception cref="T:AVOSCloud.AVException">如果符合条件的结果为 0 就会抛出异常</exception>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FirstAsync(System.Threading.CancellationToken)">
            <summary>
            查询第一个符合条件的对象
            </summary>
            <returns>符合条件的对象</returns>
            <param name="cancellationToken">cancellation token.</param>
            <exception cref="T:AVOSCloud.AVException">如果符合条件的结果为 0 就会抛出异常</exception>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FirstOrDefaultAsync">
            <summary>
            查询第一个或者是默认的符合条件的对象
            </summary>
            <returns>符合条件的对象</returns>
            <exception cref="T:AVOSCloud.AVException">如果符合条件的结果为 0 就会抛出异常</exception>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.FirstOrDefaultAsync(System.Threading.CancellationToken)">
            <summary>
            查询第一个或者是默认的符合条件的对象
            </summary>
            <returns>符合条件的对象</returns>
            <param name="cancellationToken">cancellation token.</param>
            <exception cref="T:AVOSCloud.AVException">如果符合条件的结果为 0 就会抛出异常</exception>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.GetAsync(System.String)">
            <summary>
            根据 Id 从服务端获取对象
            </summary>
            <param name="objectId">对象的 Id</param>
            <returns>完整的对象</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            根据 Id 从服务端获取对象
            </summary>
            <param name="objectId">对象的 Id</param>
            <param name="cancellationToken">cancellation token.</param>
            <returns>完整的对象</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.Include(System.String)">
            <summary>
            在查询的时候一并要求服务端返回 Pointer 或者 Relation 类型的对象
            </summary>
            <param name="key">属性列名</param>
            <returns>一个新的查询</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.Or(System.Collections.Generic.IEnumerable{AVOSCloud.AVQuery{`0}})">
            <summary>
            Constructs a query that is the or of the given queries.
            </summary>
            <param name="queries">The list of AVInstallations to 'or' together.</param>
            <returns>A AVQquery that is the 'or' of the passed in queries.</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.WhereRelatedTo(AVOSCloud.AVObject,System.String)">
            <summary>
            查询某列所有不等于指定值的对象
            </summary>
            <param name="key">匹配列名</param>
            <param name="value">用以匹配的值</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.DoCloudQuery(System.String)">
            <summary>
            执行 CQL 查询
            </summary>
            <param name="cql">CQL 语句</param>
            <returns>返回符合条件的对象集合</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.DoCloudQuery(System.String,System.Threading.CancellationToken)">
            <summary>
            执行 CQL 查询
            </summary>
            <param name="cql">CQL 语句</param>
            <param name="cancellationToken">CancellationToken</param>
            <returns>返回符合条件的对象集合</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.DoCloudQuery(System.String,System.Collections.Generic.IList{System.Object})">
            <summary>
            执行 CQL 查询,并支持占位符
            </summary>
            <param name="cql">CQL 语句</param>
            <param name="pvalues">占位符参数</param>
            <returns>符合条件的对象集合</returns>
        </member>
        <member name="M:AVOSCloud.AVQuery`1.DoCloudQuery(System.String,System.Collections.Generic.IList{System.Object},System.Threading.CancellationToken)">
            <summary>
            执行 CQL 查询,并支持占位符
            </summary>
            <param name="cql">CQL 语句</param>
            <param name="pvalues">占位符参数</param>
            <param name="cancellationToken">CancellationToken</param>
            <returns>符合条件的对象集合</returns>
        </member>
        <member name="P:AVOSCloud.AVQuery`1.JsonString">
            <summary>
            调试时可以用来查看最终的发送的查询语句
            </summary>
        </member>
        <member name="T:AVOSCloud.AVRelation`1">
            <summary>
            提供AVObject之间多对多关系的类。
            </summary>
            <typeparam name="T">关联的对象的类型</typeparam>
        </member>
        <member name="T:AVOSCloud.AVRelationBase">
            <summary>
            AVRelation 的基类。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVRelation`1.Add(`0)">
            <summary>
            添加一个 AVObject 到当前关系中。
            </summary>
            <param name="obj">The object to add.</param>
        </member>
        <member name="M:AVOSCloud.AVRelation`1.Remove(`0)">
            <summary>
            从当前关系中删除一个 AVObject
            </summary>
            <param name="obj">The object to remove.</param>
        </member>
        <member name="P:AVOSCloud.AVRelation`1.Query">
            <summary>
            获取 Query 查询体。
            </summary>
        </member>
        <member name="T:AVOSCloud.AVRole">
            <summary>
            代表AVOS Cloud 应用程序中的一个角色。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVRole.#ctor(System.String,AVOSCloud.AVACL)">
            <summary>
            创建一个角色。
            </summary>
            <param name="name">角色名称</param>
            <param name="acl">ACL</param>
        </member>
        <member name="P:AVOSCloud.AVRole.Name">
            <summary>
            角色的名称。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVRole.Query">
            <summary>
            获取查询<see cref="T:AVOSCloud.AVQuery`1" />
            </summary>
        </member>
        <member name="P:AVOSCloud.AVRole.Roles">
            <summary>
            获取当前角色的子绝色的关系类。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVRole.Users">
            <summary>
            获取拥有当前角色属性的用户（AVUser）。
            </summary>
        </member>
        <member name="T:AVOSCloud.AVUploadProgressEventArgs">
            <summary>
            上传文件的进度。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUploadProgressEventArgs.Progress">
            <summary>
            文件上传时候的进度，一个介于 0.0 和 1.0 值
            </summary>
        </member>
        <member name="P:AVOSCloud.AVDownloadProgressEventArgs.Progress">
            <summary>
            文件下载时候的进度，一个介于 0.0 和 1.0 值
            </summary>
        </member>
        <member name="T:AVOSCloud.AVUser">
            <summary>
            AVOS Cloud 应用程序的用户。
            </summary>
        </member>
        <member name="F:AVOSCloud.AVUser.currentUserMatchesDisk">
            <summary>
            Whether the currentUser is known to match the serialized version on disk.
            This is useful for saving a filesystem check if you try to load currentUser
            frequently while there is none on disk.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.#ctor">
            <summary>
            创建一个用户。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.Follow(System.String)">
            <summary>
            关注某个用户
            </summary>
            <param name="userObjectId">被关注的用户</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.Follow(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            关注某个用户
            </summary>
            <param name="userObjectId">被关注的用户Id</param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.BecomeAsync(System.String)">
            <summary>
            Logs in a user with a username and password. On success, this saves the session to disk so you
            can retrieve the currently logged in user using <see cref="P:AVOSCloud.AVUser.CurrentUser" />.
            </summary>
            <param name="sessionToken">The session token to authorize with</param>
            <returns>The user if authorization was successful</returns>
        </member>
        <member name="M:AVOSCloud.AVUser.BecomeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Logs in a user with a username and password. On success, this saves the session to disk so you
            can retrieve the currently logged in user using <see cref="P:AVOSCloud.AVUser.CurrentUser" />.
            </summary>
            <param name="sessionToken">The session token to authorize with</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The user if authorization was successful</returns>
        </member>
        <member name="M:AVOSCloud.AVUser.CleanupAuthData">
            <summary>
            Removes null values from authData (which exist temporarily for unlinking)
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.IsLinked(System.String)">
            <summary>
            Checks whether a user is linked to a service.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.BeginAuthenticate(System.String,System.EventHandler{AVOSCloud.AVCompleteAuthorizationEventArgs})">
            <summary>
            启动SNS 第三方登陆的授权，在授权完成之后回调客户端的事件。
            </summary>
            <param name="loginUrl">在 LeanCloud 设置后台显示的：登录 URL</param>
            <param name="completeAuthorizationHandler">授权完成之后，回调客户端的事件</param>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInWithAuthData(System.String,System.String,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="snsType"></param>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="expiresIn"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInWithAuthData(System.String,System.String,System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            利用第三方账户授权信息登陆到系统，并且为授权用户创建一个匿名AVUser，用户名随机。
            </summary>
            <param name="snsType">授权类型，目前暂只支持腾讯微博，新浪微博</param>
            <param name="accessToken">授权方返回的AccessToken</param>
            <param name="openId">用户的唯一ID，来自调用授权方的API返回的结果</param>
            <param name="expiresIn">Token 过期时间，一般为一个long数值。</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.AssociateWithAuthData(AVOSCloud.AVUser,System.String,System.String,System.String,System.Int64)">
            <summary>
            为已存在的AVUser绑定qq，以及新浪微博的账号。
            </summary>
            <param name="user">有效的AVUser</param>
            <param name="snsType">授权类型，目前暂只支持腾讯微博，新浪微博</param>
            <param name="accessToken">授权方返回的AccessToken</param>
            <param name="openId">用户的唯一ID，来自调用授权方的API返回的结果</param>
            <param name="expiresIn">Token 过期时间，一般为一个long数值</param>
        </member>
        <member name="M:AVOSCloud.AVUser.AssociateWithAuthData(AVOSCloud.AVUser,System.String,System.String,System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            为已存在的AVUser绑定qq，以及新浪微博的账号。
            注意：绑定的AVUser必须存在有效的登录凭证（SessionToken）
            </summary>
            <param name="user">有效的AVUser</param>
            <param name="snsType">授权类型，目前暂只支持腾讯微博（snsType：qq），新浪微博(snsType:weibo)</param>
            <param name="accessToken">授权方返回的AccessToken</param>
            <param name="openId">用户的唯一ID，来自调用授权方的API返回的结果</param>
            <param name="expiresIn">Token 过期时间，一般为一个long数值。</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.DissociateAuthData(AVOSCloud.AVUser,System.String)">
            <summary>
            为已存在的AVUser解绑qq，以及新浪微博的账号，如此做，对应的授权信息会在AVOS Cloud 服务端被清除。
            </summary>
            <param name="user">有效的AVUser</param>
            <param name="snsType">授权类型，目前暂只支持腾讯微博（snsType：qq），新浪微博(snsType:weibo)</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.DissociateAuthData(AVOSCloud.AVUser,System.String,System.Threading.CancellationToken)">
            <summary>
            为已存在的AVUser解绑qq，以及新浪微博的账号，如此做，对应的授权信息会在AVOS Cloud 服务端被清除。
            </summary>
            <param name="user">有效的AVUser</param>
            <param name="snsType">授权类型，目前暂只支持腾讯微博（snsType：qq），新浪微博(snsType:weibo)</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInAsync(System.String,System.String)">
            <summary>
            以用户名和密码匹配登陆
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns>The newly logged-in user.</returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInByMobilePhoneNumberAsync(System.String,System.String)">
            <summary>
            以手机号和密码实现登陆。
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LoginBySmsCodeAsync(System.String,System.String)">
            <summary>
            以手机号和验证码匹配登陆
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="smsCode">短信验证码</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            以用户名和密码匹配登陆
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The newly logged-in user.</returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInByEmailAsync(System.String,System.String)">
            <summary>
            用邮箱作和密码匹配登录
            </summary>
            <param name="email">邮箱</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInAsync">
            <summary>
            不传入任何参数的登陆会创建一个匿名用户。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogInByMobilePhoneNumberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            以手机号和密码匹配登陆
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="password">密码</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LoginBySmsCodeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            以手机号和验证码登陆
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="smsCode">短信验证码</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.SignUpOrLoginByMobilePhone(System.String,System.String)">
            <summary>
            手机号一键登录
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="smsCode">短信验证码</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.LogOut">
            <summary>
            Logs out the currently logged in user session. This will remove the session from disk, log out of
            linked services, and future calls to <see cref="P:AVOSCloud.AVUser.CurrentUser" /> will return <c>null</c>.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.Remove(System.String)">
            <summary>
            删除Key。
            </summary>
            <param name="key">The key to remove.</param>
            <exception cref="T:System.ArgumentException">Cannot remove the username key.</exception>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestPasswordResetAsync(System.String)">
            <summary>
            请求重置密码，密码会发送到传入的邮箱地址。
            </summary>
            <param name="email">邮箱地址</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestPasswordResetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            请求重置密码，密码会发送到传入的邮箱地址。
            </summary>
            <param name="email">邮箱地址</param>
            <param name="cancellationToken">cancellationToken</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestPasswordResetBySmsCode(System.String)">
            <summary>
             请求重置密码，需要传入注册时使用的手机号。
            </summary>
            <param name="mobilePhoneNumber">注册时使用的手机号</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestPasswordResetBySmsCode(System.String,System.Threading.CancellationToken)">
            <summary>
             请求重置密码，需要传入注册时使用的手机号。
            </summary>
            <param name="mobilePhoneNumber">注册时使用的手机号</param>
            <param name="cancellationToken">cancellationToken</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.ResetPasswordBySmsCode(System.String,System.String)">
            <summary>
            通过验证码重置密码。
            </summary>
            <param name="newPassword">新密码</param>
            <param name="smsCode">6位数验证码</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.ResetPasswordBySmsCode(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            通过验证码重置密码。
            </summary>
            <param name="newPassword">新密码</param>
            <param name="smsCode">6位数验证码</param>
            <param name="cancellationToken">cancellationToken</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestMobilePhoneVerifyAsync(System.String)">
            <summary>
            发送认证码到需要认证的手机上
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.RequestMobilePhoneVerifyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            发送认证码到需要认证的手机上
            </summary>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="cancellationToken">CancellationToken</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.VerifyMobilePhoneAsync(System.String,System.String)">
            <summary>
            验证手机验证码是否为有效值
            </summary>
            <param name="code">手机收到的验证码</param>
            <param name="mobilePhoneNumber">手机号</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.VerifyMobilePhoneAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            验证手机验证码是否为有效值
            </summary>
            <param name="code">手机收到的验证码</param>
            <param name="mobilePhoneNumber">手机号</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.AVUser.SignUpAsync">
            <summary>
            Signs up a new user. This will create a new AVUser on the server and will also persist the
            session on disk so that you can access the user using <see cref="P:AVOSCloud.AVUser.CurrentUser" />. A username and
            password must be set before calling SignUpAsync.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.SignUpAsync(System.Threading.CancellationToken)">
            <summary>
            Signs up a new user. This will create a new AVUser on the server and will also persist the
            session on disk so that you can access the user using <see cref="P:AVOSCloud.AVUser.CurrentUser" />. A username and
            password must be set before calling SignUpAsync.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.AVUser.SynchronizeAllAuthData">
            <summary>
            Synchronizes authData for all providers.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVUser.UnlinkFromAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unlinks a user from a service.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.AuthData">
            <summary>
            当前用户的权限信息。
            <remarks>存在以下几种可能：
            1.匿名用户也是有数据的
            2.第三方社交账户的授权信息
            </remarks>
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.CurrentUser">
            <summary>
            当前登陆的用户。
            if necessary.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.Email">
            <summary>
            用户的Email地址。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.MobilePhoneVerified">
            <summary>
            用户的手机号是否通过认证。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.IsAuthenticated">
            <summary>
            判断当前用户是否有合法授权。登陆之后该值将被置为True。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.Password">
            <summary>
            密码。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.Query">
            <summary>
            创建查询用户的AVQuery。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.SessionToken">
            <summary>
            当前用户登陆之后的有效鉴权 Token，用户一旦修改了密码之后失效。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.Username">
            <summary>
            用户名。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.MobilePhoneNumber">
            <summary>
            用户手机号。
            </summary>
        </member>
        <member name="P:AVOSCloud.AVUser.IsAnonymous">
            <summary>
            判断用户是否为匿名用户
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.IAVFieldOperation">
            <summary>
            A AVFieldOperation represents a modification to a value in a AVObject.
            For example, setting, deleting, or incrementing a value are all different kinds of
            AVFieldOperations.  AVFieldOperations themselves can be considered to be
            immutable.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.IAVFieldOperation.Apply(System.Object,AVOSCloud.AVObject,System.String)">
            <summary>
            Returns a new estimated value based on a previous value and this operation.  This
            value is not intended to be sent to AVOSCloud, but it is used locally on the client to
            inspect the most likely current value for a field.
            The key and object are used solely for AVRelation to be able to construct objects
            that refer back to their parents.
            </summary>
            <param name="oldValue">The previous value for the field.</param>
            <param name="obj">The object that contains this value.</param>
            <param name="key">The key that this value is for.</param>
            <returns>The new value for the field.</returns>
        </member>
        <member name="M:AVOSCloud.Internal.IAVFieldOperation.Encode">
            <summary>
            Converts the AVFieldOperation to a data structure that can be converted to JSON and sent to
            AVOSCloud as part of a save operation.
            </summary>
            <returns>An object to be JSONified.</returns>
        </member>
        <member name="M:AVOSCloud.Internal.IAVFieldOperation.MergeWithPrevious(AVOSCloud.Internal.IAVFieldOperation)">
            <summary>
            Returns a field operation that is composed of a previous operation followed by
            this operation. This will not mutate either operation. However, it may return
            <code>this</code> if the current operation is not affected by previous changes.
            For example:
              {increment by 2}.MergeWithPrevious({set to 5})       -&gt; {set to 7}
                    {set to 5}.MergeWithPrevious({increment by 2}) -&gt; {set to 5}
                   {add "foo"}.MergeWithPrevious({delete})         -&gt; {set to ["foo"]}
                      {delete}.MergeWithPrevious({add "foo"})      -&gt; {delete}        /// </summary>
            <param name="previous">The most recent operation on the field, or null if none.</param>
            <returns>A new AVFieldOperation or this.</returns>
        </member>
        <member name="T:AVOSCloud.Internal.AVDeleteOperation">
            <summary>
            删除操作。
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.FlexibleDictionaryWrapper`2">
            <summary>
            Provides a Dictionary implementation that can delegate to any other
            dictionary, regardless of its value type.  Used for coercion of
            dictionaries when returning them to users.
            </summary>
            <typeparam name="TOut">The resulting type of value in the dictionary.</typeparam>
            <typeparam name="TIn">The original type of value in the dictionary.</typeparam>
        </member>
        <member name="T:AVOSCloud.Internal.FlexibleListWrapper`2">
            <summary>
            Provides a List implementation that can delegate to any other
            list, regardless of its value type.  Used for coercion of
            lists when returning them to users.
            </summary>
            <typeparam name="TOut">The resulting type of value in the list.</typeparam>
            <typeparam name="TIn">The original type of value in the list.</typeparam>
        </member>
        <member name="M:AVOSCloud.Internal.IAVAuthenticationProvider.AuthenticateAsync(System.Threading.CancellationToken)">
            <summary>
            Authenticates with the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:AVOSCloud.Internal.IAVAuthenticationProvider.Deauthenticate">
            <summary>
            Deauthenticates (logs out) the user associated with this provider. This
            call may block.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.IAVAuthenticationProvider.RestoreAuthentication(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Restores authentication that has been serialized, such as session keys,
            etc.
            </summary>
            <param name="authData">The auth data for the provider. This value may be null
            when unlinking an account.</param>
            <returns><c>true</c> iff the authData was successfully synchronized. A <c>false</c> return
            value indicates that the user should no longer be associated because of bad auth
            data.</returns>
        </member>
        <member name="P:AVOSCloud.Internal.IAVAuthenticationProvider.AuthType">
            <summary>
            授权认证第三方应用的名称，例如QQ微博，新浪微博，微信等。
            合法的值为:1.qq;2.weibo;3.weixin.
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.IdentityEqualityComparer`1">
            <summary>
            An equality comparer that uses the object identity (i.e. ReferenceEquals)
            rather than .Equals, allowing identity to be used for checking equality in
            ISets and IDictionaries.
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.InternalExtensions">
            <summary>
            Provides helper methods that allow us to use terser code elsewhere.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.GetPartial``1(AVOSCloud.AVObject,AVOSCloud.Internal.InternalExtensions.PartialAccessor{``0})">
            <summary>
            Partial methods cannot return a value, so we instead make partial accessors
            use ref params. This helper can be used to write code more normally so we get
            the out-param or default when calling a partial method. Given a partial method:
            partial void GetFoo(ref string foo)
            we can say string foo = this.GetPartial&lt;string&gt;(GetFoo);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="self"></param>
            <param name="action"></param>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.PartialAsync``1(System.Object,AVOSCloud.Internal.InternalExtensions.PartialAccessor{System.Threading.Tasks.Task{``0}})">
            <summary>
            Partial methods cannot return a value, so we instead make partial accessors
            use ref params. This means you cannot effectively make a partial which is
            async. This code helps create a design pattern where a partial takes a ref Task
            param and we can await the PartialAsync of it. Given a partial method:
            partial void FooAsync(ref Task&lt;string&gt; task)
            we can say string foo = await PartialAsync&lt;string&gt;(FooAsync);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="self"></param>
            <param name="partial"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.Safe``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Ensures a task (even null) is awaitable.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.Safe(System.Threading.Tasks.Task)">
            <summary>
            Ensures a task (even null) is awaitable.
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.Chaining``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            对一个集合当中的每一个元素进行串行的异步 Task 操作，并且严格按照上一个任务完成之后，下一个任务才会启动的原则，最后返回一个 由新的返回值 TResult 组成的 集合
            </summary>
            <remarks>
            每一个 Task 的返回值 是一个 TResult ，所以每一个 TIn 输入就一定对应一个 TResult 输出
            </remarks>
            <typeparam name="TIn">输入的泛型参数</typeparam>
            <typeparam name="TResult">输出的泛型参数</typeparam>
            <param name="Source">一个由 TIn 组成的集合</param>
            <param name="executor">执行异步 Task 的操作，它的输入是一个 TIn，输出是一个 TResult</param>
            <returns>返回一个 TResult 构成的集合</returns>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.Chaining``2(System.Collections.Generic.IEnumerator{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Collections.Generic.List{``1})">
            <summary>
            根据@vczh 轮子大神提出的递归方式，加上 Task.ContinueWith 来实现串行操作的方法
            </summary>
            <typeparam name="TIn">输入的泛型参数</typeparam>
            <typeparam name="TResult">输出的泛型参数</typeparam>
            <param name="enumerator">TIn 集合的迭代器</param>
            <param name="executor">执行异步 Task 的操作，它的输入是一个 TIn，输出是一个 TResult</param>
            <param name="rtn">真正返回的 TResult 集合</param>
            <returns>返回一个 TResult 构成的集合</returns>
        </member>
        <member name="M:AVOSCloud.Internal.InternalExtensions.EndForNull``1">
            <summary>
            如果集合为空，则返回一个 Null 的 TResult 集合
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.Internal.IPlatformHooks.SetCache(System.String,System.Object)">
            <summary>
            rewrite the cache, igore the old data.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.Internal.IPlatformHooks.GetCache(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AVOSCloud.Internal.Json">
            <summary>
            A simple recursive-descent JSON Parser based on the grammar defined at http://www.json.org
            and http://tools.ietf.org/html/rfc4627
            </summary>
        </member>
        <member name="F:AVOSCloud.Internal.Json.startOfString">
            <summary>
            Place at the start of a regex to force the match to begin wherever the search starts (i.e.
            anchored at the index of the first character of the search, even when that search starts
            in the middle of the string).
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.Accept(System.String,System.Int32,System.Text.RegularExpressions.Regex,System.Int32@,System.Text.RegularExpressions.Match@)">
            <summary>
            Matches the string to a regex, consuming part of the string and returning the match.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.Encode(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Encodes a dictionary into a JSON string. Suppots values that are
            IDictionary&lt;string, object&gt;, IList&lt;object&gt;, strings,
            nulls, and any of the primitive types.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.Encode(System.Collections.Generic.IList{System.Object})">
            <summary>
            Encodes a list into a JSON string. Suppots values that are
            IDictionary&lt;string, object&gt;, IList&lt;object&gt;, strings,
            nulls, and any of the primitive types.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.Encode(System.Object)">
            <summary>
            Encodes an object into a JSON string.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.Parse(System.String)">
            <summary>
            Parses a JSON-text as defined in http://tools.ietf.org/html/rfc4627, returning an
            IDictionary&lt;string, object&gt; or an IList&lt;object&gt; depending on whether
            the value was an array or dictionary. Nested objects also match these types.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.ParseArray(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses JSON array syntax (e.g. '[]')
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.ParseMember(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses JSON member syntax (e.g. '"keyname" : null')
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.ParseNumber(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses a number. Returns a long if the number is an integer or has an exponent,
            otherwise returns a double.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.AVObject(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses JSON object syntax (e.g. '{}')
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.ParseString(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses a JSON string (e.g. '"foo\u1234bar\n"')
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.Json.ParseValue(System.String,System.Int32,System.Int32@,System.Object@)">
            <summary>
            Parses a value (i.e. the right-hand side of an object member assignment or
            an element in an array)
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.ReflectionHelpers.FindConstructor(System.Type,System.Type[])">
            <summary>
            This method helps simplify the process of getting a constructor for a type.
            A method like this exists in .NET but is not allowed in a Portable Class Library,
            so we've built our own.
            </summary>
            <param name="self"></param>
            <param name="parameterTypes"></param>
            <returns></returns>
        </member>
        <member name="T:AVOSCloud.Internal.SettingsWrapperBase">
            <summary>
            Wraps the custom settings object for AVOSCloud so that it can be exposed as ApplicationSettings.
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.SynchronizedEventHandler`1">
            <summary>
            Represents an event handler that calls back from the synchronization context
            that subscribed.
            <typeparam name="T">Should look like an EventArgs, but may not inherit EventArgs if T is implemented by the Windows team.</typeparam>
            </summary>
        </member>
        <member name="T:AVOSCloud.Internal.TaskQueue">
            <summary>
            A helper class for enqueuing tasks
            </summary>
        </member>
        <member name="F:AVOSCloud.Internal.TaskQueue.tail">
            <summary>
            We only need to keep the tail of the queue.  Cancelled tasks will
            just complete normally/immediately when their turn arrives.
            </summary>
        </member>
        <member name="M:AVOSCloud.Internal.TaskQueue.Enqueue``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)">
            <summary>
            Enqueues a task created by <paramref name="taskStart" />.  If the task is
            cancellable (or should be able to be cancelled while it is waiting in the
            queue), pass a cancellationToken.
            </summary>
            <typeparam name="T">The type of task.</typeparam>
            <param name="taskStart">A function given a task to await once state is
            snapshotted (e.g. after capturing session tokens at the time of the save call).
            Awaiting this task will wait for the created task's turn in the queue.</param>
            <param name="cancellationToken">A cancellation token that can be used to
            cancel waiting in the queue.</param>
            <returns>The task created by the taskStart function.</returns>
        </member>
        <member name="M:AVOSCloud.Internal.TaskQueue.GetTaskToAwait(System.Threading.CancellationToken)">
            <summary>
            Gets a cancellable task that can be safely awaited and is dependent
            on the current tail of the queue. This essentially gives us a proxy
            for the tail end of the queue whose awaiting can be cancelled.
            </summary>
            <param name="cancellationToken">A cancellation token that cancels
            the task even if the task is still in the queue. This allows the
            running task to return immediately without breaking the dependency
            chain. It also ensures that errors do not propagate.</param>
            <returns>A new task that should be awaited by enqueued tasks.</returns>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMAudioMessage">
            <summary>
            音频消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase">
            <summary>
            包含文件的的富媒体消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage">
            <summary>
            富媒体消息，它是所有富媒体的父类，所有自定义的富媒体消息都应该继承自它。
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMMessage">
            <summary>
            实时消息的核心基类，它是所有消息的父类
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMMessage.#ctor">
            <summary>
            默认的构造函数
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.ConversationId">
            <summary>
            对话的Id
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.FromClientId">
            <summary>
            发送消息的 ClientId
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.Id">
            <summary>
            消息在全局的唯一标识Id
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.Receipt">
            <summary>
            是否需要回执
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.Transient">
            <summary>
            是否为暂态消息
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.MessageBody">
            <summary>
            实际发送的消息体
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.MessageStatus">
            <summary>
            消息的状态
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.MessageIOType">
            <summary>
            消息的来源类型
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMMessage.ServerTimestamp">
            <summary>
            服务器端的时间戳
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.IAVTypedMessage">
            <summary>
            类型化的消息都需要实现该接口
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.IAVTypedMessage.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            类型化消息反序列化的方法
            </summary>
            <param name="typedMessageBodyFromServer">服务器端返回的序列化数据</param>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.IAVTypedMessage.TypedMessageBody">
            <summary>
            类型化的消息体
            </summary>
            <value>
            消息体字典
            </value>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage.MediaType">
            <summary>
            富媒体消息类型
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage.Attributes">
            <summary>
            自定义属性
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage.TypedMessageBody">
            <summary>
            富媒体消息的消息体，默认 LeanCloud 采用的是 JSON 的编码格式发送消息。
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage.Title">
            <summary>
            富媒体消息的标题
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTypedMessage.MessageBody">
            <summary>
            编码之后的消息体字符串
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.#ctor(AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType)">
             <summary>
            创建一个新的文件消息 <see cref="T:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase"/> class.
             </summary>
             <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.#ctor(System.String,System.IO.Stream,AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType)">
            <summary>
            根据名字，文件流和媒体类型创建一个 AVFileMessage
            </summary>
            <param name="name"></param>
            <param name="fileStream"></param>
            <param name="mediaType"></param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.#ctor(AVOSCloud.AVFile)">
            <summary>
            用 AVFile 直接构造一个富媒体的文件消息
            </summary>
            <param name="avFile"></param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.#ctor(System.String,AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.Url">
            <summary>
            文件的物理地址
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.FileUploadProgress">
            <summary>
            文件上传的进度监测
            </summary>
            <value>
            The file upload progress.
            </value>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.SourceFile">
            <summary>
            富媒体消息中对应的物理文件内容，图片，视频，音频都必须有这个属性
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase.Synced">
            <summary>
            文件是否已经上传
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMAudioMessage.#ctor">
            <summary>
            构造一个音频消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMClient">
            <summary>
            实时消息的客户端。
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.#ctor(System.String)">
            <summary>
            Client 的构造函数
            </summary>
            <param name="clientId">Client Id：实时聊天的客户端的唯一标识。</param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.GetQuery">
            <summary>
            获取对话查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.ConnectAsync">
            <summary>
            连接服务端，连接成功之后，所有被动消息和主动操作所产生的回应，都会得到通知。
            </summary>
            <returns></returns>
            <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">如果服务端开启了签名，但是在连接服务器时传输了错误的签名，就会抛出异常，开发者需要自行抓取，并且防止程序异常崩溃</exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.ReconnectAsync">
            <summary>
            重连。
            </summary>
            <returns></returns>
            <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">如果服务端开启了签名，但是在连接服务器时传输了错误的签名，就会抛出异常，开发者需要自行抓取，并且防止程序异常崩溃</exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.DisconnectAsync">
            <summary>
            断开连接，可以简单地理解为下线了，当前 Client 不再接受消息以及操作响应的结果了。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.GetConversationById(System.String)">
            <summary>
            根据有效的 conversationId 在本地构建一个对话
            </summary>
            <remarks>这个方法可以帮助客户端在缓存 conversationId 之后，快速的构建一个本地的 AVIMConversation 对象，但是请注意，它可能已经在别处被修改了，所以建议在此操作之后，再次显式的调用一下 FetchAsync</remarks>
            <param name="conversationId">对话的 Id</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.String)">
            <summary>
            创建一个对话
            </summary>
            <param name="clientId">被邀请的Client Id</param>
            <returns></returns>
            <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">
            以下 2 种情况会导致调用此方法时抛出异常：
            1.签名错误
            2.clientId 长度超过 50
            </exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建一个对话
            </summary>
            <param name="clientId">被邀请的Client Id。</param>
            <param name="attr">任意自定义的键值对属性。</param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
            <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">
            以下 2 种情况会导致调用此方法时抛出异常：
            1.签名错误
            2.clientId 长度超过 50
            </exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建一个对话
            </summary>
            <param name="clientId">被邀请的Client Id</param>
            <param name="name">对话名称，所有成员共享的唯一值</param>
            <param name="attr">任意自定义的键值对属性。</param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.String,System.String)">
            <summary>
            创建一个对话
            </summary>
            <param name="clientId">被邀请的Client Id</param>
            <param name="name">对话名称，所有成员共享的唯一值</param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.Collections.Generic.IList{System.String})">
            <summary>
            创建一个对话
            </summary>
            <param name="clientIds">被邀请加入该对话的 Client Id 列表</param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
            <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">
            以下 2 种情况会导致调用此方法时抛出异常：
            1.签名错误
            2.clientIds 中单个 clientId 长度超过 50
            </exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建一个对话
            </summary>
            <param name="clientIds">被邀请加入该对话的 Client Id 列表</param>
            <param name="attr">任意自定义的键值对属性。</param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
            /// <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">
            以下 2 种情况会导致调用此方法时抛出异常：
            1.签名错误
            2.clientIds 中单个 clientId 长度超过 50
            </exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateConversationAsync(System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            创建一个对话
            </summary>
            <param name="clientIds">被加入到对话的 Client Id 列表</param>
            <param name="name">对话的名称</param>
            <param name="attr">自定义属性</param>
            <param name="transient">是否为聊天室
            <remarks>聊天室可以理解为一种暂态的对话</remarks></param>
            <returns>Task&lt;AVIMConversation&gt;</returns>
            /// <exception cref="T:AVOSCloud.RealtimeMessage.AVIMException">
            以下 2 种情况会导致调用此方法时抛出异常：
            1.签名错误
            2.clientIds 中单个 clientId 长度超过 50
            </exception>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.CreateChatRoomAsync(System.String)">
            <summary>
            创建聊天室
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.QueryOnline(System.Collections.Generic.IList{System.String})">
            <summary>
            查询在线的 Client Ids，一次最多只能查询20个，如果想查询更多，开发者需要自行分批调用。 
            </summary>
            <param name="clientIds">被查询的 Client Ids</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.OpenThenSendAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.RestoreDerivedTypedMessageFromDictionary(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Restores the derived typed message from dictionary.
            </summary>
            <param name="cmdBody">The command body.</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.invokeOnConversationMembersChangedOnClient(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Invokes the on conversation members changed on client.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMClient.FilterEvents(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Filters the events.
            </summary>
            <param name="cmdResponse">The command response.</param>
            <returns></returns>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMClient.ClientId">
            <summary>
            客户端的标识,在一个 Application 内唯一。
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMClient.Status">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMClient.SignatureFactory">
            <summary>
            获取签名的接口
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMClient.OnReconnected">
            <summary>
            重连成功之后都会激发此事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMClient.OnMessageReceieved">
            <summary>
            一旦成功调用了 AVIMClient.ConnectAsync 之后，就可以开始接受服务端发送的消息，收到的消息时，会同时接受到所属的对话，时间等详细的参数。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMClient.OnConversationMembersChanged">
            <summary>
            每一个当前 Client 所属的对话产生人员变动，都会激发这个事件。
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.ClientStatus">
            <summary>
            当前 Client 与 服务器连接的状态
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.ClientStatus.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.ClientStatus.Online">
            <summary>
            在线
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.ClientStatus.Offline">
            <summary>
            离线
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMCommon">
            <summary>
            获取协议命令中的 命令ID
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMOnMessageReceivedEventArgs">
            <summary>
            收到消息时激发的事件参数，它提供消息所在的对话（Conversation）和消息（Message）本身。
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMessageReceivedEventArgs.Conversation">
            <summary>
            消息所在的对话
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMessageReceivedEventArgs.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs">
            <summary>
            对话中成员变动的事件参数，它提供被操作的对话（Conversation），操作类型（AffectedType）
            受影响的成员列表（AffectedMembers）
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs.Conversation">
            <summary>
            本次成员变动中被操作的具体对话（AVIMConversation）的对象
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs.AffectedType">
            <summary>
            变动的类型
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs.AffectedMembers">
            <summary>
            受影响的成员的 Client Ids
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs.Oprator">
            <summary>
            操作人的 Client Id
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMOnMembersChangedEventArgs.OpratedTime">
            <summary>
            操作的时间，已转化为本地时间
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMConversationEventType">
            <summary>
            变动的类型，目前支持如下：
            1、Joined：当前 Client 主动加入，案例：当 A 主动加入到对话，A 将收到 Joined 事件响应，其余的成员收到 MembersJoined 事件响应
            2、Left：当前 Client 主动退出，案例：当 A 从对话中退出，A 将收到 Left 事件响应，其余的成员收到 MembersLeft 事件响应
            3、MembersJoined：某个成员加入（区别于Joined和Kicked），案例：当 A 把 B 加入到对话中，C 将收到 MembersJoined 事件响应
            4、MembersLeft：某个成员加入（区别于Joined和Kicked），案例：当 A 把 B 从对话中剔除，C 将收到 MembersLeft 事件响应
            5、Invited：当前 Client 被邀请加入，案例：当 A 被 B 邀请加入到对话中，A 将收到 Invited 事件响应，其余的成员收到 MembersJoined 事件响应
            6、Kicked：当前 Client 被剔除，案例：当 A 被 B 从对话中剔除，A 将收到 Kicked 事件响应，其余的成员收到 MembersLeft 事件响应
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMConversation">
            <summary>
            一个对话
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.FetchAsync">
            <summary>
            从服务端加载数据到本地
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.AddMembersAsync(System.Collections.Generic.IList{System.String})">
            <summary>
            批量添加成员，添加其他的成员到当前对话中。
            </summary>
            <param name="clientIds"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.AddMembersAsync(System.String)">
            <summary>
            单个添加成员到当前对话，如果要添加当前 Current Client，请调用JoinAsync。
            </summary>
            <param name="clientId"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.RemoveMembersAsync(System.Collections.Generic.IList{System.String})">
            <summary>
            批量地从当前对话中删除成员。
            </summary>
            <param name="clientIds"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.RemoveMembersAsync(System.String)">
            <summary>
            删除单个成员。
            </summary>
            <param name="clientId"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.LeftAsync">
            <summary>
            当前 Client 退出当前对话。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.JoinAsync">
            <summary>
            当前 Client 加入当前对话。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendTextMessageAsync(System.String,System.Boolean,System.Boolean)">
            <summary>
            向该对话发送普通的文本消息。
            </summary>
            <param name="textContent">文本消息的内容，一般就是一个不超过5KB的字符串。</param>
            <param name="transient">是否暂态消息，true则表示只有在线才能收到，false表示如果对方不在线，则会收到离线推送。</param>
            <param name="receipt">是否需要回执，此字段是相对于 transient 在为 fasle 时候,并且对方上线之后，而且对方收到了这条信息，在发送方这端就会触发OnMessageDeliverd</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendTextMessageAsync(System.String)">
            <summary>
            向该对话发送普通的文本消息。
            </summary>
            <param name="textContent">文本消息的内容，一般就是一个不超过5KB的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendTextMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMTextMessage)">
            <summary>
            向该对话发送普通的文本消息。
            </summary>
            <param name="textMessage">AVIMTextMessage 实例</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMMessage)">
            <summary>
            向该对话发送消息。
            </summary>
            <param name="avMessage"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendTypedMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMTypedMessage)">
            <summary>
            发送富媒体消息
            </summary>
            <param name="avTypedMessage">富媒体消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendLocationMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMLocationMessage)">
            <summary>
            发送地理位置消息
            </summary>
            <param name="avLocationMessage">地理位置消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendFileMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMFileMessageBase)">
            <summary>
            发送文件消息
            </summary>
            <param name="avFileMessage">文件消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendImageMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMImageMessage)">
            <summary>
            发送图片消息
            </summary>
            <param name="avImageMessage">图片消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendVideoMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMVideoMessage)">
            <summary>
            发送视频消息
            </summary>
            <param name="avVideoMessage">视频消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SendAudioMessageAsync(AVOSCloud.RealtimeMessageV2.AVIMAudioMessage)">
            <summary>
            发送音频消息
            </summary>
            <param name="avAudioMessage">音频消息</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.SaveAsync">
            <summary>
            保存对话，并且在服务端生效
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.CountMembersAsync">
            <summary>
            获取服务端准确的成员数量，
            <remarks>该方法针对聊天室获取的就是在线人数</remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.MuteAsync">
            <summary>
            当前 Client 对该对话设置静音
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.UnmuteAsync">
            <summary>
            当前 Client 取消针对该对话的静音操作，重新接受消息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.QueryHistory(System.DateTime,System.Int32)">
            <summary>
            查询聊天记录
            </summary>
            <param name="latestFlag">查询起始的时间戳，返回小于这个时间(不包含)的记录。可选，默认是当前时间</param>
            <param name="limit">返回条数限制，可选，默认100条，最大1000条</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.QueryHistoryAsync(System.Int32)">
            <summary>
            从当前时间往前查询聊天记录
            </summary>
            <param name="limit">获取的条数</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.QueryHistoryAsync(System.String,System.Int64,System.Int32)">
            <summary>
            查询 messageId 之前的消息
            </summary>
            <param name="messageId">消息 Id</param>
            <param name="timestamp">消息 时间戳</param>
            <param name="limit">获取的条数</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.QueryHistory(System.DateTime,System.Int32,System.String)">
            <summary>
            查询聊天记录
            </summary>
            <param name="latestFlag">查询起始的时间戳，返回小于这个时间(不包含)的记录。可选，默认是当前时间</param>
            <param name="limit">返回条数限制，可选，默认100条，最大1000条</param>
            <param name="clientId">查看者id</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversation.invokeOnAVIMMessageReceviedOnConversation(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            该方法是处理 msg 命令，也就是处理消息收到时触发的。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnMembersJoined">
            <summary>
            有其他的 Members 加入到当前对话时激发的事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnMembersLeft">
            <summary>
            有其他的 Members 加入到当前对话时激发的事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnJoined">
            <summary>
            当前 Client 加入到当前对话中激发的事件，区别于 OnMembersLeft，此事件有且仅在 CurrentClient 加入到当前对话时才响应。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnLeft">
            <summary>
            当前 Client 离开当前对话中激发的事件，区别于 OnMembersLeft，此事件有且仅在 CurrentClient 离开当前对话才响应。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnKicked">
            <summary>
            当前 Client 被其他成员从当前对话中剔除时激发的事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnInvited">
            <summary>
             当前 Client 被其他成员邀请加入到当前对话激发的事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnMessageReceived">
            <summary>
            当前对话收到消息时激发的事件。
            <remarks>
            此事件为所有消息接受的基础事件，所有消息接受都会激发该事件；
            注：如果没有订阅具体的消息类型（AVIMTypedMessage）接受事件，那么在收到消息时，就会激发 OnMessageReceived 
            例如，收到 AVIMTextMessage 时，如果没有订阅 OnTypedMessageReceived，并且也没有订阅 OnTextMessageReceived，那么 OnMessageReceived 就会响应
            </remarks>
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnMessageSent">
            <summary>
            Occurs when [on message sent].
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnMessageDeliverd">
            <summary>
            在消息送达到会话中的其他成员时，会激发此事件。
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnTypedMessageReceived">
            <summary>
            收到富媒体消息时激发的事件
            <remarks>
            注：如果开发者没有订阅具体类型的时间，那么收到 AVIMTypedMessage（或者 AVIMTypedMessage 子类）的消息时该事件就会被激发；
            例如，没有订阅 OnTextMessageReceived，如果收到其他成员发送的 TextMessage，此时，OnTypedMessageReceived 就会被激发
            此影响以此类推到 OnFileMessageReceived,OnImageMessageReceived，OnAudioMessageReceived，OnVideoMessageReceived,OnLocationMessageReceived
            </remarks>
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnFileMessageReceived">
            <summary>
            收到文件消息时激发的事件
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnTextMessageReceived">
            <summary>
            收到文本消息时激发的事件
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnImageMessageReceived">
            <summary>
            收到图片消息时激发的事件
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnAudioMessageReceived">
            <summary>
            收到音频消息时激发的事件
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnVideoMessageReceived">
            <summary>
            收到视频消息时激发的事件
            </summary>
        </member>
        <member name="E:AVOSCloud.RealtimeMessageV2.AVIMConversation.OnLocationMessageReceived">
            <summary>
            收到地理位置消息时激发的事件
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.ConversationId">
            <summary>
            对话的唯一ID
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.Name">
            <summary>
            对话在全局的唯一的名字
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.MemberIds">
            <summary>
            对话中存在的 Client 的 Id 列表
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.MuteMemberIds">
            <summary>
            对该对话静音的成员列表
            <remarks>
            对该对话设置了静音的成员，将不会收到离线消息的推送。
            </remarks>
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.Creator">
            <summary>
            对话的创建者
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.IsTransient">
            <summary>
            是否为聊天室
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.CreatedAt">
            <summary>
            对话创建的时间
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.UpdatedAt">
            <summary>
            对话更新的时间
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.Attributes">
            <summary>
            对话的自定义属性
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.LastMesaageAt">
            <summary>
            对话最后活跃的时间，也可以理解为最近的一条消息发送或者接受的时间。
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMConversation.CurrentClient">
            <summary>
            当前的AVIMClient，一个对话理论上只存在一个AVIMClient。
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMConversationQuery">
            <summary>
            用来构建对话查询的类
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversationQuery.FindAsync">
            <summary>
            执行查询对话的操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversationQuery.CountAsync">
            <summary>
            计算符合查询条件的对话的个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMConversationQuery.GetAsync(System.String)">
            <summary>
            直接根据 conversationId 查询对话
            </summary>
            <param name="objectId">conversationId</param>
            <returns></returns>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMDefaultMessage">
            <summary>
            默认的消息格式
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMFileMessage">
            <summary>
            文件消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMImageMessage">
            <summary>
            图片消息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMImageMessage.#ctor">
            <summary>
            构造一个图片消息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMImageMessage.#ctor(System.String,System.IO.Stream)">
            <summary>
            构造一个图片信息
            </summary>
            <param name="name">图片名称</param>
            <param name="imageStrem">图片的数据流</param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMImageMessage.#ctor(System.String)">
            <summary>
            通过公网 Url 创建图片信息
            </summary>
            <param name="name">包含了后缀名的图片名称，比如，CH.jepg</param>
            <param name="url">图片的 Url</param>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage">
            <summary>
            地理位置消息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage.#ctor">
            <summary>
            构造一个地理位置消息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage.#ctor(AVOSCloud.AVGeoPoint)">
            <summary>
            根据 AVGeoPoint 创建一个地理位置消息
            </summary>
            <param name="avGeoPoint"></param>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage.#ctor(System.Double,System.Double)">
            <summary>
            根据纬度和经度创建一个地理位置消息
            </summary>
            <param name="latitude">纬度</param>
            <param name="longitude">经度</param>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage.GeoPoint">
            <summary>
            具体的地理位置
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMLocationMessage.TypedMessageBody">
            <summary>
            地理位置经过的消息体
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType">
            <summary>
            富媒体消息类型，用户自定义部分的枚举值默认从1开始。
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.None">
            <summary>
            未指定
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.Text">
            <summary>
            纯文本信息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.Image">
            <summary>
            图片信息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.Audio">
            <summary>
            音频消息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.Video">
            <summary>
            视频消息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.Location">
            <summary>
            地理位置消息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageMediaType.File">
            <summary>
            文件消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus">
            <summary>
            消息状态
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus.AVIMMessageStatusNone">
            <summary>
            
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus.AVIMMessageStatusSending">
            <summary>
            正在发送
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus.AVIMMessageStatusSent">
            <summary>
            已发送
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus.AVIMMessageStatusDelivered">
            <summary>
            已送达
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageStatus.AVIMMessageStatusFailed">
            <summary>
            失败
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMMessageIOType">
            <summary>
            消息的来源类别
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageIOType.AVIMMessageIOTypeIn">
            <summary>
            收到的消息
            </summary>
        </member>
        <member name="F:AVOSCloud.RealtimeMessageV2.AVIMMessageIOType.AVIMMessageIOTypeOut">
            <summary>
            发送的消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMTextMessage">
            <summary>
            纯文本信息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMTextMessage.#ctor">
            <summary>
            构建一个文本信息 <see cref="T:AVOSCloud.RealtimeMessageV2.AVIMTextMessage"/> class.
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMTextMessage.#ctor(System.String)">
            <summary>
            构造一个纯文本信息
            </summary>
            <param name="textContent"></param>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMTextMessage.TextContent">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMVideoMessage">
            <summary>
            视频消息
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.AVIMVideoMessage.#ctor">
            <summary>
            构造一个视频消息
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessage.AVIMError">
            <summary>
            实时消息中产生的错误
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessage.AVIMException">
            <summary>
            实时消息中产生的运行时异常
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessage.AVIMException.Error">
            <summary>
            异常代码
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.IAVIMMessage`1">
            <summary>
            实现消息拓展的接口
            </summary>
            <typeparam name="T">AVIMMessage</typeparam>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.IAVIMMessage`1.Convert(AVOSCloud.RealtimeMessageV2.AVIMMessage)">
            <summary>
            服务端消息类型转化成本地类型
            </summary>
            <param name="serverMessage">服务端的消息类型</param>
            <returns>本地类型</returns>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.ISignatureFactoryV2">
            <summary>
            v2 聊天中实现签名的接口。
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.ISignatureFactoryV2.CreateConversationSignature(System.String,System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            返回 Conversation 操作的签名
            </summary>
            <param name="conversationId">对话的Id</param>
            <param name="clientId">当前 AVIMClient 的 Id</param>
            <param name="targetIds">被操作的 Client Id 列表</param>
            <param name="action">执行的操作，目前只有 add，remove</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.ISignatureFactoryV2.CreateConnectSignature(System.String)">
            <summary>
            返回 Client 连接服务器的签名
            </summary>
            <param name="clientId"></param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.ISignatureFactoryV2.CreateStartConversationSignature(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            返回一个 Client 是否可以和 memberIds 发起对话的签名
            </summary>
            <param name="clientId">发起对话的 Client Id</param>
            <param name="memberIds">被邀请加入对话的 Client Ids</param>
            <returns></returns>
        </member>
        <member name="M:AVOSCloud.RealtimeMessageV2.ISignatureFactoryV2.CreateQueryHistorySignature(System.String,System.String)">
            <summary>
            返回一个 Client 是否可以查询聊天记录的签名
            </summary>
            <param name="clientId"></param>
            <param name="conversationId"></param>
            <returns></returns>
        </member>
        <member name="T:AVOSCloud.RealtimeMessage.AVIMSignature">
            <summary>
            聊天相关的一些敏感操作的签名对象
            </summary>
        </member>
        <member name="T:AVOSCloud.RealtimeMessageV2.AVIMSignatureV2">
            <summary>
            聊天相关的一些敏感操作的签名对象 for V2
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMSignatureV2.SignatureContent">
            <summary>
            经过 SHA1 以及相关操作参数计算出来的加密字符串
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMSignatureV2.Timestamp">
            <summary>
            服务端时间戳
            </summary>
        </member>
        <member name="P:AVOSCloud.RealtimeMessageV2.AVIMSignatureV2.Nonce">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="T:AVOSCloud.AVAnalytics">
            <summary>
            Provides an interface to AVOSCloud's logging and analytics backend.
            Methods will return immediately and cache requests (along with timestamps)
            to be handled in the background. 
            </summary>
        </member>
        <member name="F:AVOSCloud.AVAnalytics.transStrategy">
            <summary>
            1=批量发送;
            7=启动发送;
            6=按最小时间间隔发送。
            </summary>
        </member>
        <member name="M:AVOSCloud.AVAnalytics.TrackAppOpened">
            <summary>
            Tracks this application being launched.
            </summary>
            <returns>An Async Task that can be waited on or ignored.</returns>
        </member>
        <member name="M:AVOSCloud.AVAnalytics.TrackEvent(System.String)">
            <summary>
            Tracks the occurrence of a custom event with additional dimensions.
            AVOSCloud will store a data point at the time of invocation with the
            given event name.
            Dimensions will allow segmentation of the occurrences of this
            custom event.
            To track a user signup along with additional metadata, consider the
            following:
            <code>
            IDictionary&lt;string, string&gt; dims = new Dictionary&lt;string, string&gt; {
              { "gender", "m" },
              { "source", "web" },
              { "dayType", "weekend" }
            };
            AVAnalytics.TrackEvent("signup", dims);
            </code>
            There is a default limit of 4 dimensions per event tracked.
            </summary>
            <param name="name">The name of the custom event to report to AVClient
            as having happened.</param>
            <returns>An Async Task that can be waited on or ignored.</returns>
        </member>
        <member name="M:AVOSCloud.AVAnalytics.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Tracks the occurrence of a custom event with additional dimensions.
            AVOSCloud will store a data point at the time of invocation with the
            given event name.
            Dimensions will allow segmentation of the occurrences of this
            custom event.
            To track a user signup along with additional metadata, consider the
            following:
            <code>
            IDictionary&lt;string, string&gt; dims = new Dictionary&lt;string, string&gt; {
              { "gender", "m" },
              { "source", "web" },
              { "dayType", "weekend" }
            };
            AVAnalytics.TrackEventAsync("signup", dims);
            </code>
            There is a default limit of 4 dimensions per event tracked.
            </summary>
            <param name="name">The name of the custom event to report to AVClient
            as having happened.</param>
            <param name="dimensions">The dictionary of information by which to
            segment this event.</param>
            <returns>An Async Task that can be waited on or ignored.</returns>
        </member>
        <member name="T:AVOSCloud.AVInstallation">
            <summary>
             Represents this app installed on this device. Use this class to track infomation you want
             to sample from (i.e. if you update a field on app launch, you can issue a query to see
             the number of devices which were active in the last N hours).
            </summary>
        </member>
        <member name="F:AVOSCloud.AVInstallation.currentInstallationMatchesDisk">
            <summary>
            Whether the currentInstallation is known to match the serialized version on disk.
            This is useful for saving a filesystem check if you try to load currentInstallation
            frequently while there is none on disk.
            </summary>
        </member>
        <member name="F:AVOSCloud.AVInstallation.tzNameMap">
            <summary>
            This mapping of Windows names to a standard everyone else uses is maintained 
            by the Unicode consortium, which makes this officially the first helpful
            interaction between Unicode and Microsoft.
            Unfortunately this is a little lossy in that we only store the first mapping in each zone because
            Microsoft does not give us more granular location information.
            Built from http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/zone_tzid.html
            </summary>
        </member>
        <member name="M:AVOSCloud.AVInstallation.#ctor">
            <summary>
            Constructs a new AVInstallation. Generally, you should not need to construct
            AVInstallations yourself. Instead use <see cref="P:AVOSCloud.AVInstallation.CurrentInstallation" />.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.AppIdentifier">
            <summary>
            The system-dependent unique identifier of this installation. This identifier should be
            sufficient to distinctly name an app on stores which may allow multiple apps with the
            same display name.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.AppName">
            <summary>
            The user-friendly display name of this application.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.AppVersion">
            <summary>
            A version string consisting of Major.Minor.Build.Revision.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.Channels">
            <summary>-
            A sequence of arbitrary strings which are used to identify this installation for push notifications.
            By convention, the empty string is known as the "Broadcast" channel.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.CurrentInstallation">
            <summary>
            Gets the AVInstallation representing this app on this device.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.DeviceType">
            <summary>
            The runtime target of this application. Is one of winrt, winphone, or dotnet.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.InstallationId">
            <summary>
            A GUID that uniquely names this app installed on this device.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.Item(System.String)">
            <summary>
            Gets or sets a value on the object.  It is recommended to name
            keys in partialCamelCaseLikeThis.
            </summary>
            <param name="key">The key for the object.  Keys must be alphanumeric plus underscore
            and start with a letter.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is
            retrieved and <paramref name="key" /> is not found.</exception>
            <returns>The value for the key.</returns>
        </member>
        <member name="P:AVOSCloud.AVInstallation.AVVersion">
            <summary>
            The version of the AVOSCloud SDK used to build this application.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.Query">
            <summary>
            Constructs a <see cref="T:AVOSCloud.AVQuery`1" /> for AVInstallations.
            AVInstallation queries cannot be executed on the client, but are used to target
            push notifications.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVInstallation.TimeZone">
            <summary>
            The time zone in which this device resides. This string is in the tz database format
            AVOSCloud uses for local-time pushes. Due to platform restrictions, the mapping is less
            granular on Windows than it may be on other systems. E.g. The zones
            America/Vancouver America/Dawson America/Whitehorse, America/Tijuana, PST8PDT, and
            America/Los_Angeles are all reported as America/Los_Angeles.
            </summary>
        </member>
        <member name="T:AVOSCloud.AVPush">
            <summary>
             A utility class for sending push notifications.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVPush.#ctor">
            <summary>
            Creates a push which will target every device. The Data field must be set before calling SendAsync.
            </summary>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAlertAsync(System.String)">
            <summary>
            Pushes a simple message to every device. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Data = new Dictionary&lt;string, object&gt;{{"alert", alert}};
            return push.SendAsync();
            </code>
            </summary>
            <param name="alert">The alert message to send.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAlertAsync(System.String,System.String)">
            <summary>
            Pushes a simple message to every device subscribed to channel. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Channels = new List&lt;string&gt; { channel };
            push.Data = new Dictionary&lt;string, object&gt;{{"alert", alert}};
            return push.SendAsync();
            </code>
            </summary>
            <param name="alert">The alert message to send.</param>
            <param name="channel">An Installation must be subscribed to channel to receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAlertAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Pushes a simple message to every device subscribed to any of channels. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Channels = channels;
            push.Data = new Dictionary&lt;string, object&gt;{{"alert", alert}};
            return push.SendAsync();
            </code>
            </summary>
            <param name="alert">The alert message to send.</param>
            <param name="channels">An Installation must be subscribed to any of channels to receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAlertAsync(System.String,AVOSCloud.AVQuery{AVOSCloud.AVInstallation})">
            <summary>
            Pushes a simple message to every device matching the target query. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Query = query;
            push.Data = new Dictionary&lt;string, object&gt;{{"alert", alert}};
            return push.SendAsync();
            </code>
            </summary>
            <param name="alert">The alert message to send.</param>
            <param name="query">A query filtering the devices which should receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAsync">
            <summary>
             Request a push to be sent. When this task completes, AVOSCloud has successfully acknowledged a request
             to send push notifications but has not necessarily finished sending all notifications
             requested. The current status of recent push notifications can be seen in your Push Notifications
             console on https://cn.avoscloud.com/
            </summary>
            <returns>A Task for continuation.</returns>
        </member>
        <member name="M:AVOSCloud.AVPush.SendAsync(System.Threading.CancellationToken)">
            <summary>
             Request a push to be sent. When this task completes, AVOSCloud has successfully acknowledged a request
             to send push notifications but has not necessarily finished sending all notifications
             requested. The current status of recent push notifications can be seen in your Push Notifications
             console on https://cn.avoscloud.com/
            </summary>
            <param name="cancellationToken">CancellationToken to cancel the current operation.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendDataAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Pushes an arbitrary payload to every device. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Data = data;
            return push.SendAsync();
            </code>
            </summary>
            <param name="data">A push payload. See the AVPush.Data property for more information.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendDataAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Pushes an arbitrary payload to every device subscribed to channel. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Channels = new List&lt;string&gt; { channel };
            push.Data = data;
            return push.SendAsync();
            </code>
            </summary>
            <param name="data">A push payload. See the AVPush.Data property for more information.</param>
            <param name="channel">An Installation must be subscribed to channel to receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendDataAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Pushes an arbitrary payload to every device subscribed to any of channels. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Channels = channels;
            push.Data = data;
            return push.SendAsync();
            </code>
            </summary>
            <param name="data">A push payload. See the AVPush.Data property for more information.</param>
            <param name="channels">An Installation must be subscribed to any of channels to receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SendDataAsync(System.Collections.Generic.IDictionary{System.String,System.Object},AVOSCloud.AVQuery{AVOSCloud.AVInstallation})">
            <summary>
            Pushes an arbitrary payload to every device matching target. This is shorthand for:
            <code>
            var push = new AVPush();
            push.Query = query
            push.Data = data;
            return push.SendAsync();
            </code>
            </summary>
            <param name="data">A push payload. See the AVPush.Data property for more information.</param>
            <param name="query">A query filtering the devices which should receive this Push Notification.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SubscribeAsync(System.String)">
            <summary>
            Subscribe the current installation to this channel. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.AddUniqueToList("channels", channel);
            installation.SaveAsync();
            </code>
            </summary>
            <param name="channel">The channel to which this installation should subscribe.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SubscribeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Subscribe the current installation to this channel. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.AddUniqueToList("channels", channel);
            installation.SaveAsync(cancellationToken);
            </code>
            </summary>
            <param name="channel">The channel to which this installation should subscribe.</param>
            <param name="cancellationToken">CancellationToken to cancel the current operation.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SubscribeAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Subscribe the current installation to these channels. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.AddRangeUniqueToList("channels", channels);
            installation.SaveAsync();
            </code>
            </summary>
            <param name="channels">The channels to which this installation should subscribe.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.SubscribeAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Subscribe the current installation to these channels. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.AddRangeUniqueToList("channels", channels);
            installation.SaveAsync(cancellationToken);
            </code>
            </summary>
            <param name="channels">The channels to which this installation should subscribe.</param>
            <param name="cancellationToken">CancellationToken to cancel the current operation.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.UnsubscribeAsync(System.String)">
            <summary>
            Unsubscribe the current installation from this channel. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.Remove("channels", channel);
            installation.SaveAsync();
            </code>
            </summary>
            <param name="channel">The channel from which this installation should unsubscribe.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.UnsubscribeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsubscribe the current installation from this channel. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.Remove("channels", channel);
            installation.SaveAsync(cancellationToken);
            </code>
            </summary>
            <param name="channel">The channel from which this installation should unsubscribe.</param>
            <param name="cancellationToken">CancellationToken to cancel the current operation.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.UnsubscribeAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unsubscribe the current installation from these channels. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.RemoveAllFromList("channels", channels);
            installation.SaveAsync();
            </code>
            </summary>
            <param name="channels">The channels from which this installation should unsubscribe.</param>
        </member>
        <member name="M:AVOSCloud.AVPush.UnsubscribeAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Unsubscribe the current installation from these channels. This is shorthand for:
            <code>
            var installation = AVInstallation.CurrentInstallation;
            installation.RemoveAllFromList("channels", channels);
            installation.SaveAsync(cancellationToken);
            </code>
            </summary>
            <param name="channels">The channels from which this installation should unsubscribe.</param>
            <param name="cancellationToken">CancellationToken to cancel the current operation.</param>
        </member>
        <member name="P:AVOSCloud.AVPush.Alert">
            <summary>
            A conveninence method which sets Data to a dictionary with alert as its only field. Equivalent to
            <code>
            Data = new Dictionary&lt;string, object&gt; {{"alert", alert}};
            </code>
            This should not be used in tandem with Data.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVPush.Channels">
            <summary>
            A short-hand to set a query which only discriminates on the channels to which a device is subscribed.
            This is shorthand for:
            <code>
            var push = new Push();
            push.Query = AVInstallation.Query.WhereKeyContainedIn("channels", channels);
            </code>
            This cannot be used in tandem with Query.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVPush.Data">
            <summary>
            The contents of this push. Some keys have special meaning. A full list of pre-defined
            keys can be found in the AVOSCloud Push Guide. The following keys affect WinRT devices.
            Keys which do not start with x-winrt- can be prefixed with x-winrt- to specify an
            override only sent to winrt devices.
            alert: the body of the alert text.
            title: The title of the text.
            x-winrt-payload: A full XML payload to be sent to WinRT installations instead of
                 the auto-layout.
            This should not be used in tandem with Alert.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVPush.Expiration">
            <summary>
            The time at which this push will expire. This should not be used in tandem with ExpirationInterval.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVPush.ExpirationInterval">
            <summary>
            The time from initial schedul when this push will expire. This should not be used in tandem with Expiration.
            </summary>
        </member>
        <member name="P:AVOSCloud.AVPush.Query">
            <summary>
            An installation query that specifies which installations shoudl receive
            this push.
            This should not be used in tandem with Channels.
            </summary>
        </member>
        <member name="P:AVOSCloud.PlatformHooks.ApplicationSettings">
            <summary>
            Provides a dictionary that gets persisted on the filesystem between runs of the app.
            This is analogous to NSUserDefaults in iOS.
            </summary>
        </member>
        <member name="T:AVOSCloud.PlatformHooks.SettingsWrapper">
            <summary>
            Wraps the custom settings object for AVOSCloud so that it can be exposed as ApplicationSettings.
            </summary>
        </member>
        <member name="M:AVOSCloud.RealtimeMessage.RealtimeMessageHooks.webSocketClient_MessageReceivedV2(System.Object,WebSocketSharp.MessageEventArgs)">
            <summary>
            websocket 接受消息的事件监听
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:WebSocketSharp.MessageEventArgs"/> instance containing the event data.</param>
        </member>
    </members>
</doc>
