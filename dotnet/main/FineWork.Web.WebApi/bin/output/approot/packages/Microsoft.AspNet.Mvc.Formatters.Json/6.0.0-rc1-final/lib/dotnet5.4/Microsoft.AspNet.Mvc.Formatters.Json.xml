<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Mvc.Formatters.Json</name>
    </assembly>
    <members>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.JsonInputFormatter.SerializerSettings">
            <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonInputFormatter.CreateJsonReader(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatterContext"/> for the read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when reading.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonReader"/> used during deserialization.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during serialization and deserialization.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.JsonOutputFormatter">
            <summary>
            An output formatter that specializes in writing JSON content.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.JsonOutputFormatter.SerializerSettings">
            <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonOutputFormatter.CreateJsonWriter(System.IO.TextWriter)">
            <summary>
            Called during serialization to create the <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> used to write.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonWriter"/> used during serialization.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonOutputFormatter.CreateJsonSerializer">
            <summary>
            Called during serialization to create the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during serialization and deserialization.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonPatchInputFormatter.ReadRequestBodyAsync(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.JsonPatchInputFormatter.CanRead(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.JsonPatchExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNet.JsonPatch.JsonPatchDocument`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.JsonPatchExtensions.ApplyTo``1(Microsoft.AspNet.JsonPatch.JsonPatchDocument{``0},``0,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Applies JSON patch operations on object and logs errors in <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <param name="patchDoc">The <see cref="T:Microsoft.AspNet.JsonPatch.JsonPatchDocument`1"/>.</param>
            <param name="objectToApplyTo">The entity on which <see cref="T:Microsoft.AspNet.JsonPatch.JsonPatchDocument`1"/> is applied.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> to add errors.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.JsonPatchExtensions.ApplyTo``1(Microsoft.AspNet.JsonPatch.JsonPatchDocument{``0},``0,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,System.String)">
            <summary>
            Applies JSON patch operations on object and logs errors in <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <param name="patchDoc">The <see cref="T:Microsoft.AspNet.JsonPatch.JsonPatchDocument`1"/>.</param>
            <param name="objectToApplyTo">The entity on which <see cref="T:Microsoft.AspNet.JsonPatch.JsonPatchDocument`1"/> is applied.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> to add errors.</param>
            <param name="prefix">The prefix to use when looking up values in <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.JsonResult">
            <summary>
            An action result which formats the given object as JSON.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.JsonResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.JsonResult.#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
            <param name="serializerSettings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used by
            the formatter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.JsonResult.ContentType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> representing the Content-Type header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.JsonResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.JsonResult.Value">
            <summary>
            Gets or sets the value to be formatted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.MvcJsonOptions">
            <summary>
            Provides programmatic configuration for JSON in the MVC framework.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcJsonOptions.SerializerSettings">
            <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> that are used by this application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.SerializerSettingsProvider">
            <summary>
            Helper class which provides <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.SerializerSettingsProvider.CreateSerializerSettings">
            <summary>
            Creates default <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <returns>Default <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcJsonMvcBuilderExtensions">
            <summary>
            Extensions methods for configuring MVC via an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcJsonMvcBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNet.Mvc.MvcJsonOptions})">
            <summary>
            Adds configuration of <see cref="T:Microsoft.AspNet.Mvc.MvcJsonOptions"/> for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">The <see cref="T:Microsoft.AspNet.Mvc.MvcJsonOptions"/> which need to be configured.</param>
        </member>
        <member name="T:Microsoft.Extensions.Internal.ClosedGenericMatcher">
            <summary>
            Helper related to generic interface definitions and implementing classes.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.ClosedGenericMatcher.ExtractGenericInterface(System.Type,System.Type)">
            <summary>
            Determine whether <paramref name="queryType"/> is or implements a closed generic <see cref="T:System.Type"/>
            created from <paramref name="interfaceType"/>.
            </summary>
            <param name="queryType">The <see cref="T:System.Type"/> of interest.</param>
            <param name="interfaceType">The open generic <see cref="T:System.Type"/> to match. Usually an interface.</param>
            <returns>
            The closed generic <see cref="T:System.Type"/> created from <paramref name="interfaceType"/> that
            <paramref name="queryType"/> is or implements. <c>null</c> if the two <see cref="T:System.Type"/>s have no such
            relationship.
            </returns>
            <remarks>
            This method will return <paramref name="queryType"/> if <paramref name="interfaceType"/> is
            <c>typeof(KeyValuePair{,})</c>, and <paramref name="queryType"/> is
            <c>typeof(KeyValuePair{string, object})</c>.
            </remarks>
        </member>
    </members>
</doc>
