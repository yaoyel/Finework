<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Razor.Runtime.Precompilation</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisAttributeUtilities">
            <summary>
            Utilities to work with creating <see cref="T:System.Attribute"/> instances from <see cref="T:Microsoft.CodeAnalysis.AttributeData"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisAttributeUtilities.GetCustomAttributes``1(Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            Gets the sequence of <see cref="T:System.Attribute"/>s of type <typeparamref name="TAttribute"/>
            that are declared on the specified <paramref name="symbol"/>.
            </summary>
            <typeparam name="TAttribute">The <see cref="T:System.Attribute"/> type.</typeparam>
            <param name="symbol">The <see cref="T:Microsoft.CodeAnalysis.ISymbol"/> to find attributes on.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo">
            <summary>
            <see cref="T:Microsoft.AspNet.Razor.Runtime.TagHelpers.IPropertyInfo"/> implementation using Code Analysis symbols.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.#ctor(Microsoft.CodeAnalysis.IPropertySymbol)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo"/>.
            </summary>
            <param name="propertySymbol">The <see cref="T:Microsoft.CodeAnalysis.IPropertySymbol"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.HasPublicGetter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.HasPublicSetter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.PropertyType">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedPropertyInfo.GetCustomAttributes``1">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo">
            <summary>
            <see cref="T:Microsoft.AspNet.Razor.Runtime.TagHelpers.ITypeInfo"/> implementation using Code Analysis symbols.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.#ctor(Microsoft.CodeAnalysis.ITypeSymbol)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo"/>.
            </summary>
            <param name="propertySymbol">The <see cref="T:Microsoft.CodeAnalysis.IPropertySymbol"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.FullName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.TypeSymbol">
            <summary>
            The <see cref="T:Microsoft.CodeAnalysis.ITypeSymbol"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.IsAbstract">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.IsGenericType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.IsNested">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.IsPublic">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.Properties">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.ImplementsInterface(Microsoft.AspNet.Razor.Runtime.TagHelpers.ITypeInfo)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.GetCustomAttributes``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.GetGenericDictionaryParameters">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.IsType(Microsoft.CodeAnalysis.ITypeSymbol,System.Reflection.TypeInfo)">
            <summary>
            Gets a value that indicates if <paramref name="targetTypeInfo"/> is represented using
            <paramref name="sourceTypeSymbol"/> in the symbol graph.
            </summary>
            <param name="sourceTypeSymbol">The <see cref="T:Microsoft.CodeAnalysis.ITypeSymbol"/>.</param>
            <param name="targetTypeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <returns><c>true</c> if <paramref name="targetTypeInfo"/> is a symbol for
            <paramref name="sourceTypeSymbol"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.GetAssemblyQualifiedName(Microsoft.CodeAnalysis.ITypeSymbol)">
            <summary>
            Gets the assembly qualified named of the specified <paramref name="symbol"/>.
            </summary>
            <param name="symbol">The <see cref="T:Microsoft.CodeAnalysis.ITypeSymbol" /> to generate the name for.</param>
            <returns>The assembly qualified name.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.Equals(Microsoft.AspNet.Razor.Runtime.TagHelpers.ITypeInfo)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.CodeAnalysisSymbolBasedTypeInfo.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Razor.Runtime.Precompilation.PrecompilationTagHelperTypeResolver">
            <summary>
            <see cref="T:Microsoft.AspNet.Razor.Runtime.TagHelpers.TagHelperTypeResolver"/> used during Razor precompilation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.PrecompilationTagHelperTypeResolver.#ctor(Microsoft.CodeAnalysis.Compilation)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Razor.Runtime.Precompilation.PrecompilationTagHelperTypeResolver"/>.
            </summary>
            <param name="compilation">The <see cref="T:Microsoft.CodeAnalysis.Compilation"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.PrecompilationTagHelperTypeResolver.GetTopLevelExportedTypes(System.Reflection.AssemblyName)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.ArgumentMustBeAnInstanceOf">
            <summary>
            Argument must be an instance of '{0}' or '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.FormatArgumentMustBeAnInstanceOf(System.Object,System.Object)">
            <summary>
            Argument must be an instance of '{0}' or '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.CodeAnalysisConstructorNotFound">
            <summary>
            Unable to find a suitable constructor for type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.FormatCodeAnalysisConstructorNotFound(System.Object)">
            <summary>
            Unable to find a suitable constructor for type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.CodeAnalysis_PropertyNotFound">
            <summary>
            Unable to find property {0} on type {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.FormatCodeAnalysis_PropertyNotFound(System.Object,System.Object)">
            <summary>
            Unable to find property {0} on type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.CodeAnalysis_TypeConstantKindNotSupported">
            <summary>
            The type constant kind '{0}' is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.FormatCodeAnalysis_TypeConstantKindNotSupported(System.Object)">
            <summary>
            The type constant kind '{0}' is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.CodeAnalysis_UnableToLoadAssemblyReference">
            <summary>
            Unable to load assembly reference '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Razor.Runtime.Precompilation.Resources.FormatCodeAnalysis_UnableToLoadAssemblyReference(System.Object)">
            <summary>
            Unable to load assembly reference '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast <see cref="T:Microsoft.Extensions.Internal.PropertyHelper"/>.
            This constructor does not cache the helper. For caching, use <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Object)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Property">
            <summary>
            Gets the backing <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Name">
            <summary>
            Gets (or sets in derived types) the property name.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueGetter">
            <summary>
            Gets the property value getter.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueSetter">
            <summary>
            Gets the property value setter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetValue(System.Object)">
            <summary>
            Returns the property value for the specified <paramref name="instance"/>.
            </summary>
            <param name="instance">The object whose property value will be returned.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.SetValue(System.Object,System.Object)">
            <summary>
            Sets the property value for the specified <paramref name="instance" />.
            </summary>
            <param name="instance">The object whose property value will be set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Type)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            specified type.
            </summary>
            <param name="type">the type to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)">
            <summary>
            <para>
            Creates and caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="instance">The instance to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the instance's type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Type)">
            <summary>
            <para>
            Creates a caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeNullSafeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter which is safe for a null input object. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter for reference types. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the setter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed. This only works for reference types.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.ObjectToDictionary(System.Object)">
             <summary>
             Given an object, adds each instance property with a public get method as a key and its
             associated value to a dictionary.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a copy
             is returned.
             </summary>
             <remarks>
             The implementation of PropertyHelper will cache the property accessors per-type. This is
             faster when the the same type is used multiple times with ObjectToDictionary.
             </remarks>
        </member>
    </members>
</doc>
